//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Inprotech.IntegrationServer.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class PtoAccess {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal PtoAccess() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Inprotech.IntegrationServer.Properties.PtoAccess", typeof(PtoAccess).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Corresponding live case in Inprotech system is different than the one anticipated. Verify and try to move documents to DMS again..
        /// </summary>
        internal static string CorrespondingCaseChangedException {
            get {
                return ResourceManager.GetString("CorrespondingCaseChangedException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Your request to Open Patent Services (OPS) has been forbidden. Please contact Administrator. .
        /// </summary>
        internal static string EpoAuthForbiddenExceptionMessage {
            get {
                return ResourceManager.GetString("EpoAuthForbiddenExceptionMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid response from Open Patent Services - &apos;{0}&apos;.
        /// </summary>
        internal static string EpoAuthInvalidResponseExceptionMessage {
            get {
                return ResourceManager.GetString("EpoAuthInvalidResponseExceptionMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The European Patent Office Consumer Key required to retrieve data from the European Patent Office is incorrect. Contact your administrator to resolve this issue..
        /// </summary>
        internal static string EpoAuthUnauthorizedExceptionMessage {
            get {
                return ResourceManager.GetString("EpoAuthUnauthorizedExceptionMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to locate case in external system. .
        /// </summary>
        internal static string ExternalCaseNotFoundExceptionMessage {
            get {
                return ResourceManager.GetString("ExternalCaseNotFoundExceptionMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to download the document &apos;{0}&apos; from the external system. .
        /// </summary>
        internal static string ExternalDocumentCouldNotBeDownloadedExceptionMessage {
            get {
                return ResourceManager.GetString("ExternalDocumentCouldNotBeDownloadedExceptionMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Application Number for this item in the comparison source matches more than one live case in Inprotech, therefore the system cannot determine which is the corresponding case. To resolve this issue, locate all cases in Inprotech that have this Application Number and change the number or case status where necessary, so that there is only one live case with this Application Number in this jurisdiction. Perform a recovery download when this had been done..
        /// </summary>
        internal static string MultiplePossibleInprotechCasesExceptionMessage {
            get {
                return ResourceManager.GetString("MultiplePossibleInprotechCasesExceptionMessage", resourceCulture);
            }
        }
    }
}
