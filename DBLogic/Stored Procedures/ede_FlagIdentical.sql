-----------------------------------------------------------------------------------------------------------------------------
-- Creation of ede_FlagIdentical
-----------------------------------------------------------------------------------------------------------------------------
If exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[ede_FlagIdentical]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
Begin
	Print '**** Drop Stored Procedure dbo.ede_FlagIdentical.'
	Drop procedure [dbo].[ede_FlagIdentical]
End
Print '**** Creating Stored Procedure dbo.ede_FlagIdentical...'
Print ''
GO

SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO

CREATE PROCEDURE dbo.ede_FlagIdentical
(
	@pnUserIdentityId	int,		-- Mandatory
	@psCulture		nvarchar(10)	= null,
	@pnBatchNo		int
)
as
-- PROCEDURE:	ede_FlagIdentical
-- VERSION:	2
-- COPYRIGHT:	Copyright CPA Software Solutions (Australia) Pty Limited
-- DESCRIPTION:	This procedure will flag Processed rows that are identical for the batch.

-- MODIFICATIONS :
-- Date		Who	Change	Version	Description
-- -----------	-------	------	-------	----------------------------------------------- 
-- 22 Sep 2006	vql	12995	1	Procedure created.
-- 04 Mar 2009	MF	17453	2	Ensure @nErrorCode is tested after every statement
--					that causes it to be set.

SET NOCOUNT ON
SET CONCAT_NULL_YIELDS_NULL OFF

Declare	@nErrorCode		int
Declare @sSQLString1		nvarchar(4000)
Declare @sSQLString2		nvarchar(4000)
Declare @sSQLString3		nvarchar(4000)
Declare @sSQLString4		nvarchar(4000)
Declare @sSQLString5		nvarchar(4000)
Declare @sSQLString6		nvarchar(4000)

-- Table Codes REMOVE WHEN DONE.
-- null	When transaction data first created via Import Server.
-- 3410	Unmapped codes
-- 3420	Codes mapped
-- 3430	Unresolved names
-- 3440	Ready for Case Import
-- 3450	Ready for Case Update
-- 3460	Operator Review
-- 3470	Supervisor Approval
-- 3480	Processed

-- Initialise variables.
Set @nErrorCode = 0

-----------------------------------------------------------------------------------------
-- Check if any cases in this batch is identical to cases in the last batch -------------
-- If identical then set the EDETRANSACTIONBODY.TRANSSTATUSCODE column to processed -----
-----------------------------------------------------------------------------------------
If @nErrorCode = 0
Begin
	Update EDETRANSACTIONBODY
	set TRANSSTATUSCODE = 3480	-- The code for processed.
	where TRANSACTIONIDENTIFIER in (
	select A1.TRANSACTIONIDENTIFIER
	from EDESENDERDETAILS S1
	join EDECASEDETAILS A1	on (A1.BATCHNO=S1.BATCHNO)
	join EDECASEDETAILS A0 	on (A0.SENDERCASEREFERENCE=A1.SENDERCASEREFERENCE
				and A0.BATCHNO=(select max(A2.BATCHNO)
						from EDECASEDETAILS A2
						join EDESENDERDETAILS S2 on (S2.BATCHNO=A2.BATCHNO
									 and isnull(S2.SENDERREQUESTTYPE,'')=isnull(S1.SENDERREQUESTTYPE,'')
									 and S2.SENDERREQUESTIDENTIFIER=S1.SENDERREQUESTIDENTIFIER)
						where A2.BATCHNO<A1.BATCHNO
						and A2.SENDERCASEREFERENCE=A1.SENDERCASEREFERENCE))
	
	-- Look for differences in EDEASSOCIATEDCASEDETAILS
	left join (	select A1.BATCHNO, A1.TRANSACTIONIDENTIFIER, count(*) as MISMATCH
			from EDECASEDETAILS A1
			join EDESENDERDETAILS S1 on (S1.BATCHNO=A1.BATCHNO)
			join (	select	S.SENDERREQUESTIDENTIFIER,
					S.SENDERREQUESTTYPE,
					A.SENDERCASEREFERENCE, 
					max(A.BATCHNO) as BATCHNO, 
					max(A.TRANSACTIONIDENTIFIER) as TRANSACTIONIDENTIFIER
				from EDESENDERDETAILS S
				join EDECASEDETAILS A on (A.BATCHNO=S.BATCHNO)
				where S.BATCHNO<@pnBatchNo
				group by S.SENDERREQUESTIDENTIFIER, S.SENDERREQUESTTYPE, A.SENDERCASEREFERENCE) A0
					 	on (isnull(A0.SENDERREQUESTTYPE,'')=isnull(S1.SENDERREQUESTTYPE,'')
					 	and A0.SENDERREQUESTIDENTIFIER=S1.SENDERREQUESTIDENTIFIER
						and A0.SENDERCASEREFERENCE    =A1.SENDERCASEREFERENCE)
			     join EDEASSOCIATEDCASEDETAILS B1
						on (B1.BATCHNO=A1.BATCHNO
						and B1.TRANSACTIONIDENTIFIER=A1.TRANSACTIONIDENTIFIER)
			left join EDEASSOCIATEDCASEDETAILS B0
						on (B0.BATCHNO=A0.BATCHNO
						and B0.TRANSACTIONIDENTIFIER=A0.TRANSACTIONIDENTIFIER
						and B0.ASSOCCASESEQ=B1.ASSOCCASESEQ)
			where checksum(B0.ASSOCIATEDCASERELATIONSHIPCODE_T,B0.ASSOCIATEDCASECOUNTRYCODE_T,B0.ASSOCIATEDCASECOMMENT)
			   <> checksum(B1.ASSOCIATEDCASERELATIONSHIPCODE_T,B1.ASSOCIATEDCASECOUNTRYCODE_T,B1.ASSOCIATEDCASECOMMENT)
			and A1.BATCHNO=@pnBatchNo
			group by A1.BATCHNO, A1.TRANSACTIONIDENTIFIER) B3	
						on (B3.BATCHNO=A1.BATCHNO
						and B3.TRANSACTIONIDENTIFIER=A1.TRANSACTIONIDENTIFIER)
	
	-- Look for differences in EDECASENAMEDETAILS
	left join (	select A1.BATCHNO, A1.TRANSACTIONIDENTIFIER, count(*) as MISMATCH
			from EDECASEDETAILS A1
			join EDESENDERDETAILS S1 on (S1.BATCHNO=A1.BATCHNO)
			join (	select	S.SENDERREQUESTIDENTIFIER,
					S.SENDERREQUESTTYPE,
					A.SENDERCASEREFERENCE, 
					max(A.BATCHNO) as BATCHNO, 
					max(A.TRANSACTIONIDENTIFIER) as TRANSACTIONIDENTIFIER
				from EDESENDERDETAILS S
				join EDECASEDETAILS A on (A.BATCHNO=S.BATCHNO)
				where S.BATCHNO<@pnBatchNo
				group by S.SENDERREQUESTIDENTIFIER, S.SENDERREQUESTTYPE, A.SENDERCASEREFERENCE) A0
					 	on (isnull(A0.SENDERREQUESTTYPE,'')=isnull(S1.SENDERREQUESTTYPE,'')
					 	and A0.SENDERREQUESTIDENTIFIER=S1.SENDERREQUESTIDENTIFIER
						and A0.SENDERCASEREFERENCE    =A1.SENDERCASEREFERENCE)
			     join EDECASENAMEDETAILS C1
						on (C1.BATCHNO=A1.BATCHNO
						and C1.TRANSACTIONIDENTIFIER=A1.TRANSACTIONIDENTIFIER)
			left join EDECASENAMEDETAILS C0
						on (C0.BATCHNO=A0.BATCHNO
						and C0.TRANSACTIONIDENTIFIER=A0.TRANSACTIONIDENTIFIER
						and C0.NAMETYPECODE_T=C1.NAMETYPECODE_T
						and C0.NAMESEQUENCENUMBER=C1.NAMESEQUENCENUMBER)
			where checksum(C0.NAMEREFERENCE,C0.NAMECURRENCYCODE)
			   <> checksum(C1.NAMEREFERENCE,C1.NAMECURRENCYCODE)
			and A1.BATCHNO=@pnBatchNo
			group by A1.BATCHNO, A1.TRANSACTIONIDENTIFIER) C3	
						on (C3.BATCHNO=A1.BATCHNO
						and C3.TRANSACTIONIDENTIFIER=A1.TRANSACTIONIDENTIFIER)
	
	-- Look for differences in EDECLASSDESCRIPTION
	left join (	select A1.BATCHNO, A1.TRANSACTIONIDENTIFIER, count(*) as MISMATCH
			from EDECASEDETAILS A1
			join EDESENDERDETAILS S1 on (S1.BATCHNO=A1.BATCHNO)
			join (	select	S.SENDERREQUESTIDENTIFIER,
					S.SENDERREQUESTTYPE,
					A.SENDERCASEREFERENCE, 
					max(A.BATCHNO) as BATCHNO, 
					max(A.TRANSACTIONIDENTIFIER) as TRANSACTIONIDENTIFIER
				from EDESENDERDETAILS S
				join EDECASEDETAILS A on (A.BATCHNO=S.BATCHNO)
				where S.BATCHNO<@pnBatchNo
				group by S.SENDERREQUESTIDENTIFIER, S.SENDERREQUESTTYPE, A.SENDERCASEREFERENCE) A0
					 	on (isnull(A0.SENDERREQUESTTYPE,'')=isnull(S1.SENDERREQUESTTYPE,'')
					 	and A0.SENDERREQUESTIDENTIFIER=S1.SENDERREQUESTIDENTIFIER
						and A0.SENDERCASEREFERENCE    =A1.SENDERCASEREFERENCE)
			     join EDECLASSDESCRIPTION D1
						on (D1.BATCHNO=A1.BATCHNO
						and D1.TRANSACTIONIDENTIFIER=A1.TRANSACTIONIDENTIFIER)
			left join EDECLASSDESCRIPTION D0
						on (D0.BATCHNO=A0.BATCHNO
						and D0.TRANSACTIONIDENTIFIER=A0.TRANSACTIONIDENTIFIER
						and D0.CLASSNUMBER=D1.CLASSNUMBER)
			where(checksum(D0.CLASSIFICATIONTYPECODE,D0.CLASSIFICATIONVERSION,D0.LANGUAGECODE)
			   <> checksum(D1.CLASSIFICATIONTYPECODE,D1.CLASSIFICATIONVERSION,D1.LANGUAGECODE))
			OR D0.GOODSSERVICESDESCRIPTION not like D1.GOODSSERVICESDESCRIPTION
			OR(D0.GOODSSERVICESDESCRIPTION is not null and D1.GOODSSERVICESDESCRIPTION is null)
			OR(D1.GOODSSERVICESDESCRIPTION is not null and D0.GOODSSERVICESDESCRIPTION is null)
			and A1.BATCHNO=@pnBatchNo
			group by A1.BATCHNO, A1.TRANSACTIONIDENTIFIER) D3	
						on (D3.BATCHNO=A1.BATCHNO
						and D3.TRANSACTIONIDENTIFIER=A1.TRANSACTIONIDENTIFIER)
	
	-- Look for differences in EDECONTACTINFORMATIONDETAILS
	left join (	select A1.BATCHNO, A1.TRANSACTIONIDENTIFIER, count(*) as MISMATCH
			from EDECASEDETAILS A1
			join EDESENDERDETAILS S1 on (S1.BATCHNO=A1.BATCHNO)
			join (	select	S.SENDERREQUESTIDENTIFIER,
					S.SENDERREQUESTTYPE,
					A.SENDERCASEREFERENCE, 
					max(A.BATCHNO) as BATCHNO, 
					max(A.TRANSACTIONIDENTIFIER) as TRANSACTIONIDENTIFIER
				from EDESENDERDETAILS S
				join EDECASEDETAILS A on (A.BATCHNO=S.BATCHNO)
				where S.BATCHNO<@pnBatchNo
				group by S.SENDERREQUESTIDENTIFIER, S.SENDERREQUESTTYPE, A.SENDERCASEREFERENCE) A0
					 	on (isnull(A0.SENDERREQUESTTYPE,'')=isnull(S1.SENDERREQUESTTYPE,'')
					 	and A0.SENDERREQUESTIDENTIFIER=S1.SENDERREQUESTIDENTIFIER
						and A0.SENDERCASEREFERENCE    =A1.SENDERCASEREFERENCE)
			     join EDECONTACTINFORMATIONDETAILS E1
						on (E1.BATCHNO=A1.BATCHNO
						and E1.TRANSACTIONIDENTIFIER=A1.TRANSACTIONIDENTIFIER)
			left join EDECONTACTINFORMATIONDETAILS E0
						on (E0.BATCHNO=A0.BATCHNO
						and E0.TRANSACTIONIDENTIFIER=A0.TRANSACTIONIDENTIFIER
						and E0.NAMETYPECODE=E1.NAMETYPECODE
						and E0.NAMESEQUENCENUMBER=E1.NAMESEQUENCENUMBER)
			where checksum(E0.PAYMENTIDENTIFIER,E0.PHONE,E0.PHONEKIND,E0.FAX,E0.EMAIL,E0.URL,E0.OTHERELECTRONICADDRESS)
			   <> checksum(E1.PAYMENTIDENTIFIER,E1.PHONE,E1.PHONEKIND,E1.FAX,E1.EMAIL,E1.URL,E1.OTHERELECTRONICADDRESS)
			and A1.BATCHNO=@pnBatchNo
			group by A1.BATCHNO, A1.TRANSACTIONIDENTIFIER) E3	
						on (E3.BATCHNO=A1.BATCHNO
						and E3.TRANSACTIONIDENTIFIER=A1.TRANSACTIONIDENTIFIER)
	
	-- Look for differences in EDEDESCRIPTIONDETAILS
	left join (	select A1.BATCHNO, A1.TRANSACTIONIDENTIFIER, count(*) as MISMATCH
			from EDECASEDETAILS A1
			join EDESENDERDETAILS S1 on (S1.BATCHNO=A1.BATCHNO)
			join (	select	S.SENDERREQUESTIDENTIFIER,
					S.SENDERREQUESTTYPE,
					A.SENDERCASEREFERENCE, 
					max(A.BATCHNO) as BATCHNO, 
					max(A.TRANSACTIONIDENTIFIER) as TRANSACTIONIDENTIFIER
				from EDESENDERDETAILS S
				join EDECASEDETAILS A on (A.BATCHNO=S.BATCHNO)
				where S.BATCHNO<@pnBatchNo
				group by S.SENDERREQUESTIDENTIFIER, S.SENDERREQUESTTYPE, A.SENDERCASEREFERENCE) A0
					 	on (isnull(A0.SENDERREQUESTTYPE,'')=isnull(S1.SENDERREQUESTTYPE,'')
					 	and A0.SENDERREQUESTIDENTIFIER=S1.SENDERREQUESTIDENTIFIER
						and A0.SENDERCASEREFERENCE    =A1.SENDERCASEREFERENCE)
			     join EDEDESCRIPTIONDETAILS F1
						on (F1.BATCHNO=A1.BATCHNO
						and F1.TRANSACTIONIDENTIFIER=A1.TRANSACTIONIDENTIFIER)
			left join EDEDESCRIPTIONDETAILS F0
						on (F0.BATCHNO=A0.BATCHNO
						and F0.TRANSACTIONIDENTIFIER=A0.TRANSACTIONIDENTIFIER
						and F0.DESCRIPTIONCODE_T=F1.DESCRIPTIONCODE_T)
			where((checksum(F0.LANGUAGECODE)
			   <>  checksum(F1.LANGUAGECODE))
			OR F0.DESCRIPTIONTEXT not like F1.DESCRIPTIONTEXT
			OR(F0.DESCRIPTIONTEXT is not null and F1.DESCRIPTIONTEXT is null)
			OR(F1.DESCRIPTIONTEXT is not null and F0.DESCRIPTIONTEXT is null))
			and A1.BATCHNO=@pnBatchNo
			group by A1.BATCHNO, A1.TRANSACTIONIDENTIFIER) F3	
						on (F3.BATCHNO=A1.BATCHNO
						and F3.TRANSACTIONIDENTIFIER=A1.TRANSACTIONIDENTIFIER)
	
	-- Look for differences in EDEDESIGNATEDCOUNTRYDETAILS
	left join (	select A1.BATCHNO, A1.TRANSACTIONIDENTIFIER, count(*) as MISMATCH
			from EDECASEDETAILS A1
			join EDESENDERDETAILS S1 on (S1.BATCHNO=A1.BATCHNO)
			join (	select	S.SENDERREQUESTIDENTIFIER,
					S.SENDERREQUESTTYPE,
					A.SENDERCASEREFERENCE, 
					max(A.BATCHNO) as BATCHNO, 
					max(A.TRANSACTIONIDENTIFIER) as TRANSACTIONIDENTIFIER
				from EDESENDERDETAILS S
				join EDECASEDETAILS A on (A.BATCHNO=S.BATCHNO)
				where S.BATCHNO<@pnBatchNo
				group by S.SENDERREQUESTIDENTIFIER, S.SENDERREQUESTTYPE, A.SENDERCASEREFERENCE) A0
					 	on (isnull(A0.SENDERREQUESTTYPE,'')=isnull(S1.SENDERREQUESTTYPE,'')
					 	and A0.SENDERREQUESTIDENTIFIER=S1.SENDERREQUESTIDENTIFIER
						and A0.SENDERCASEREFERENCE    =A1.SENDERCASEREFERENCE)
			     join EDEDESIGNATEDCOUNTRYDETAILS G1
						on (G1.BATCHNO=A1.BATCHNO
						and G1.TRANSACTIONIDENTIFIER=A1.TRANSACTIONIDENTIFIER)
			left join EDEDESIGNATEDCOUNTRYDETAILS G0
						on (G0.BATCHNO=A0.BATCHNO
						and G0.TRANSACTIONIDENTIFIER=A0.TRANSACTIONIDENTIFIER
						and G0.DESIGNATEDCOUNTRYCODE_T=G1.DESIGNATEDCOUNTRYCODE_T)
			where checksum(G0.DESIGNATEDCOUNTRYCODE_T)
			   <> checksum(G1.DESIGNATEDCOUNTRYCODE_T)
			and A1.BATCHNO=@pnBatchNo
			group by A1.BATCHNO, A1.TRANSACTIONIDENTIFIER) G3	
						on (G3.BATCHNO=A1.BATCHNO
						and G3.TRANSACTIONIDENTIFIER=A1.TRANSACTIONIDENTIFIER)
	
	-- Look for differences in EDEEVENTDETAILS
	left join (	select A1.BATCHNO, A1.TRANSACTIONIDENTIFIER, count(*) as MISMATCH
			from EDECASEDETAILS A1
			join EDESENDERDETAILS S1 on (S1.BATCHNO=A1.BATCHNO)
			join (	select	S.SENDERREQUESTIDENTIFIER,
					S.SENDERREQUESTTYPE,
					A.SENDERCASEREFERENCE, 
					max(A.BATCHNO) as BATCHNO, 
					max(A.TRANSACTIONIDENTIFIER) as TRANSACTIONIDENTIFIER
				from EDESENDERDETAILS S
				join EDECASEDETAILS A on (A.BATCHNO=S.BATCHNO)
				where S.BATCHNO<@pnBatchNo
				group by S.SENDERREQUESTIDENTIFIER, S.SENDERREQUESTTYPE, A.SENDERCASEREFERENCE) A0
					 	on (isnull(A0.SENDERREQUESTTYPE,'')=isnull(S1.SENDERREQUESTTYPE,'')
					 	and A0.SENDERREQUESTIDENTIFIER=S1.SENDERREQUESTIDENTIFIER
						and A0.SENDERCASEREFERENCE    =A1.SENDERCASEREFERENCE)
			     join EDEEVENTDETAILS H1
						on (H1.BATCHNO=A1.BATCHNO
						and H1.TRANSACTIONIDENTIFIER=A1.TRANSACTIONIDENTIFIER)
			left join EDEEVENTDETAILS H0
						on (H0.BATCHNO=A0.BATCHNO
						and H0.TRANSACTIONIDENTIFIER=A0.TRANSACTIONIDENTIFIER
						and checksum(H0.ASSOCIATEDCASERELATIONSHIPCODE,H0.ASSOCIATEDCASECOUNTRYCODE,H0.EVENTCODE_T,H0.EVENTCYCLE)
						  = checksum(H1.ASSOCIATEDCASERELATIONSHIPCODE,H1.ASSOCIATEDCASECOUNTRYCODE,H1.EVENTCODE_T,H1.EVENTCYCLE))
			where((checksum(H0.EVENTDATE,H0.EVENTDUEDATE,H0.ANNUITYTERM,H0.LANGUAGECODE)
			   <>  checksum(H1.EVENTDATE,H1.EVENTDUEDATE,H1.ANNUITYTERM,H1.LANGUAGECODE))
			OR H0.EVENTTEXT not like H1.EVENTTEXT
			OR(H0.EVENTTEXT is not null and H1.EVENTTEXT is null)
			OR(H1.EVENTTEXT is not null and H0.EVENTTEXT is null))
			and A1.BATCHNO=@pnBatchNo
			group by A1.BATCHNO, A1.TRANSACTIONIDENTIFIER) H3	
						on (H3.BATCHNO=A1.BATCHNO
						and H3.TRANSACTIONIDENTIFIER=A1.TRANSACTIONIDENTIFIER)
	
	-- Look for differences in EDEFORMATTEDADDRESS
	left join (	select A1.BATCHNO, A1.TRANSACTIONIDENTIFIER, count(*) as MISMATCH
			from EDECASEDETAILS A1
			join EDESENDERDETAILS S1 on (S1.BATCHNO=A1.BATCHNO)
			join (	select	S.SENDERREQUESTIDENTIFIER,
					S.SENDERREQUESTTYPE,
					A.SENDERCASEREFERENCE, 
					max(A.BATCHNO) as BATCHNO, 
					max(A.TRANSACTIONIDENTIFIER) as TRANSACTIONIDENTIFIER
				from EDESENDERDETAILS S
				join EDECASEDETAILS A on (A.BATCHNO=S.BATCHNO)
				where S.BATCHNO<@pnBatchNo
				group by S.SENDERREQUESTIDENTIFIER, S.SENDERREQUESTTYPE, A.SENDERCASEREFERENCE) A0
					 	on (isnull(A0.SENDERREQUESTTYPE,'')=isnull(S1.SENDERREQUESTTYPE,'')
					 	and A0.SENDERREQUESTIDENTIFIER=S1.SENDERREQUESTIDENTIFIER
						and A0.SENDERCASEREFERENCE    =A1.SENDERCASEREFERENCE)
			     join EDEFORMATTEDADDRESS I1
						on (I1.BATCHNO=A1.BATCHNO
						and I1.TRANSACTIONIDENTIFIER=A1.TRANSACTIONIDENTIFIER)
			left join EDEFORMATTEDADDRESS I0
						on (I0.BATCHNO=A0.BATCHNO
						and I0.TRANSACTIONIDENTIFIER=A0.TRANSACTIONIDENTIFIER
						and I0.NAMETYPECODE=I1.NAMETYPECODE
						and I0.NAMESEQUENCENUMBER=I1.NAMESEQUENCENUMBER)
			where((checksum(I0.PAYMENTIDENTIFIER,I0.LANGUAGECODE,I0.SEQUENCENUMBER,I0.ADDRESSMAILCODE,I0.ADDRESSPOSTOFFICEBOX,I0.ADDRESSROOM,I0.ADDRESSFLOOR,I0.ADDRESSBUILDING,I0.ADDRESSSTREET,I0.ADDRESSCITY,I0.ADDRESSCOUNTY,I0.ADDRESSSTATE,I0.ADDRESSPOSTCODE,I0.ADDRESSCOUNTRYCODE)--,I0.LANGUAGECODEATTN,I0.SEQUENCENUMBERATTN)
			   <>  checksum(I1.PAYMENTIDENTIFIER,I1.LANGUAGECODE,I1.SEQUENCENUMBER,I1.ADDRESSMAILCODE,I1.ADDRESSPOSTOFFICEBOX,I1.ADDRESSROOM,I1.ADDRESSFLOOR,I1.ADDRESSBUILDING,I1.ADDRESSSTREET,I1.ADDRESSCITY,I1.ADDRESSCOUNTY,I1.ADDRESSSTATE,I1.ADDRESSPOSTCODE,I1.ADDRESSCOUNTRYCODE))--,I1.LANGUAGECODEATTN,I1.SEQUENCENUMBERATTN))
			OR I0.ADDRESSLINE not like I1.ADDRESSLINE
			OR(I0.ADDRESSLINE is not null and I1.ADDRESSLINE is null)
			OR(I1.ADDRESSLINE is not null and I0.ADDRESSLINE is null))
-- 			OR I0.ADDRESSATTENTIONOF not like I1.ADDRESSATTENTIONOF
-- 			OR(I0.ADDRESSATTENTIONOF is not null and I1.ADDRESSATTENTIONOF is null)
-- 			OR(I1.ADDRESSATTENTIONOF is not null and I0.ADDRESSATTENTIONOF is null))
			and A1.BATCHNO=@pnBatchNo
			group by A1.BATCHNO, A1.TRANSACTIONIDENTIFIER) I3	
						on (I3.BATCHNO=A1.BATCHNO
						and I3.TRANSACTIONIDENTIFIER=A1.TRANSACTIONIDENTIFIER)
	
	-- Look for differences in EDEFORMATTEDNAME
	left join (	select A1.BATCHNO, A1.TRANSACTIONIDENTIFIER, count(*) as MISMATCH
			from EDECASEDETAILS A1
			join EDESENDERDETAILS S1 on (S1.BATCHNO=A1.BATCHNO)
			join (	select	S.SENDERREQUESTIDENTIFIER,
					S.SENDERREQUESTTYPE,
					A.SENDERCASEREFERENCE, 
					max(A.BATCHNO) as BATCHNO, 
					max(A.TRANSACTIONIDENTIFIER) as TRANSACTIONIDENTIFIER
				from EDESENDERDETAILS S
				join EDECASEDETAILS A on (A.BATCHNO=S.BATCHNO)
				where S.BATCHNO<@pnBatchNo
				group by S.SENDERREQUESTIDENTIFIER, S.SENDERREQUESTTYPE, A.SENDERCASEREFERENCE) A0
					 	on (isnull(A0.SENDERREQUESTTYPE,'')=isnull(S1.SENDERREQUESTTYPE,'')
					 	and A0.SENDERREQUESTIDENTIFIER=S1.SENDERREQUESTIDENTIFIER
						and A0.SENDERCASEREFERENCE    =A1.SENDERCASEREFERENCE)
			     join EDEFORMATTEDNAME J1
						on (J1.BATCHNO=A1.BATCHNO
						and J1.TRANSACTIONIDENTIFIER=A1.TRANSACTIONIDENTIFIER)
			left join EDEFORMATTEDNAME J0
						on (J0.BATCHNO=A0.BATCHNO
						and J0.TRANSACTIONIDENTIFIER=A0.TRANSACTIONIDENTIFIER
						and J0.NAMETYPECODE=J1.NAMETYPECODE
						and J0.NAMESEQUENCENUMBER=J1.NAMESEQUENCENUMBER)
			where checksum(J0.PAYMENTIDENTIFIER,J0.NAMEPREFIX,J0.FIRSTNAME,J0.MIDDLENAME,J0.LASTNAME,J0.SECONDLASTNAME,J0.NAMESUFFIX,J0.GENDER,J0.INDIVIDUALIDENTIFIER,J0.PERSONROLE,J0.ORGANIZATIONNAME,J0.ORGANIZATIONDEPARTMENT,J0.NAMESYNONYM)
			   <> checksum(J1.PAYMENTIDENTIFIER,J1.NAMEPREFIX,J1.FIRSTNAME,J1.MIDDLENAME,J1.LASTNAME,J1.SECONDLASTNAME,J1.NAMESUFFIX,J1.GENDER,J1.INDIVIDUALIDENTIFIER,J1.PERSONROLE,J1.ORGANIZATIONNAME,J1.ORGANIZATIONDEPARTMENT,J1.NAMESYNONYM)
			and A1.BATCHNO=@pnBatchNo
			group by A1.BATCHNO, A1.TRANSACTIONIDENTIFIER) J3	
						on (J3.BATCHNO=A1.BATCHNO
						and J3.TRANSACTIONIDENTIFIER=A1.TRANSACTIONIDENTIFIER)
	
	-- Look for differences in EDEGOODSSERVICESDETAILS
	left join (	select A1.BATCHNO, A1.TRANSACTIONIDENTIFIER, count(*) as MISMATCH
			from EDECASEDETAILS A1
			join EDESENDERDETAILS S1 on (S1.BATCHNO=A1.BATCHNO)
			join (	select	S.SENDERREQUESTIDENTIFIER,
					S.SENDERREQUESTTYPE,
					A.SENDERCASEREFERENCE, 
					max(A.BATCHNO) as BATCHNO, 
					max(A.TRANSACTIONIDENTIFIER) as TRANSACTIONIDENTIFIER
				from EDESENDERDETAILS S
				join EDECASEDETAILS A on (A.BATCHNO=S.BATCHNO)
				where S.BATCHNO<@pnBatchNo
				group by S.SENDERREQUESTIDENTIFIER, S.SENDERREQUESTTYPE, A.SENDERCASEREFERENCE) A0
					 	on (isnull(A0.SENDERREQUESTTYPE,'')=isnull(S1.SENDERREQUESTTYPE,'')
					 	and A0.SENDERREQUESTIDENTIFIER=S1.SENDERREQUESTIDENTIFIER
						and A0.SENDERCASEREFERENCE    =A1.SENDERCASEREFERENCE)
			     join EDEGOODSSERVICESDETAILS K1
						on (K1.BATCHNO=A1.BATCHNO
						and K1.TRANSACTIONIDENTIFIER=A1.TRANSACTIONIDENTIFIER)
			left join EDEGOODSSERVICESDETAILS K0
						on (K0.BATCHNO=A0.BATCHNO
						and K0.TRANSACTIONIDENTIFIER=A0.TRANSACTIONIDENTIFIER
						and K0.CLASSIFICATIONTYPECODE=K1.CLASSIFICATIONTYPECODE)
			where((checksum(K0.CLASSIFICATIONVERSION,K0.LANGUAGECODE)
			   <>  checksum(K1.CLASSIFICATIONVERSION,K1.LANGUAGECODE))
			OR K0.GOODSSERVICESCOMMENT not like K1.GOODSSERVICESCOMMENT
			OR(K0.GOODSSERVICESCOMMENT is not null and K1.GOODSSERVICESCOMMENT is null)
			OR(K1.GOODSSERVICESCOMMENT is not null and K0.GOODSSERVICESCOMMENT is null))
			and A1.BATCHNO=@pnBatchNo
			group by A1.BATCHNO, A1.TRANSACTIONIDENTIFIER) K3	
						on (K3.BATCHNO=A1.BATCHNO
						and K3.TRANSACTIONIDENTIFIER=A1.TRANSACTIONIDENTIFIER)
	
	-- Look for differences in EDEIDENTIFIERNUMBERDETAILS
	left join (	select A1.BATCHNO, A1.TRANSACTIONIDENTIFIER, count(*) as MISMATCH
			from EDECASEDETAILS A1
			join EDESENDERDETAILS S1 on (S1.BATCHNO=A1.BATCHNO)
			join (	select	S.SENDERREQUESTIDENTIFIER,
					S.SENDERREQUESTTYPE,
					A.SENDERCASEREFERENCE, 
					max(A.BATCHNO) as BATCHNO, 
					max(A.TRANSACTIONIDENTIFIER) as TRANSACTIONIDENTIFIER
				from EDESENDERDETAILS S
				join EDECASEDETAILS A on (A.BATCHNO=S.BATCHNO)
				where S.BATCHNO<@pnBatchNo
				group by S.SENDERREQUESTIDENTIFIER, S.SENDERREQUESTTYPE, A.SENDERCASEREFERENCE) A0
					 	on (isnull(A0.SENDERREQUESTTYPE,'')=isnull(S1.SENDERREQUESTTYPE,'')
					 	and A0.SENDERREQUESTIDENTIFIER=S1.SENDERREQUESTIDENTIFIER
						and A0.SENDERCASEREFERENCE    =A1.SENDERCASEREFERENCE)
			     join EDEIDENTIFIERNUMBERDETAILS L1
						on (L1.BATCHNO=A1.BATCHNO
						and L1.TRANSACTIONIDENTIFIER=A1.TRANSACTIONIDENTIFIER)
			left join EDEIDENTIFIERNUMBERDETAILS L0
						on (L0.BATCHNO=A0.BATCHNO
						and L0.TRANSACTIONIDENTIFIER=A0.TRANSACTIONIDENTIFIER
						and L0.ASSOCCASESEQ=L1.ASSOCCASESEQ
						and L0.ASSOCIATEDCASERELATIONSHIPCODE=L1.ASSOCIATEDCASERELATIONSHIPCODE)
			where checksum(L0.ASSOCIATEDCASECOUNTRYCODE,L0.IDENTIFIERNUMBERCODE_T,L0.IDENTIFIERNUMBERTEXT)
			   <> checksum(L1.ASSOCIATEDCASECOUNTRYCODE,L1.IDENTIFIERNUMBERCODE_T,L1.IDENTIFIERNUMBERTEXT)
			and A1.BATCHNO=@pnBatchNo
			group by A1.BATCHNO, A1.TRANSACTIONIDENTIFIER) L3	
						on (L3.BATCHNO=A1.BATCHNO
						and L3.TRANSACTIONIDENTIFIER=A1.TRANSACTIONIDENTIFIER)
	
	-- Look for differences in EDENAME
	left join (	select A1.BATCHNO, A1.TRANSACTIONIDENTIFIER, count(*) as MISMATCH
			from EDECASEDETAILS A1
			join EDESENDERDETAILS S1 on (S1.BATCHNO=A1.BATCHNO)
			join (	select	S.SENDERREQUESTIDENTIFIER,
					S.SENDERREQUESTTYPE,
					A.SENDERCASEREFERENCE, 
					max(A.BATCHNO) as BATCHNO, 
					max(A.TRANSACTIONIDENTIFIER) as TRANSACTIONIDENTIFIER
				from EDESENDERDETAILS S
				join EDECASEDETAILS A on (A.BATCHNO=S.BATCHNO)
				where S.BATCHNO<@pnBatchNo
				group by S.SENDERREQUESTIDENTIFIER, S.SENDERREQUESTTYPE, A.SENDERCASEREFERENCE) A0
					 	on (isnull(A0.SENDERREQUESTTYPE,'')=isnull(S1.SENDERREQUESTTYPE,'')
					 	and A0.SENDERREQUESTIDENTIFIER=S1.SENDERREQUESTIDENTIFIER
						and A0.SENDERCASEREFERENCE    =A1.SENDERCASEREFERENCE)
			     join EDENAME M1	on (M1.BATCHNO=A1.BATCHNO
						and M1.TRANSACTIONIDENTIFIER=A1.TRANSACTIONIDENTIFIER)
			left join EDENAME M0	on (M0.BATCHNO=A0.BATCHNO
						and M0.TRANSACTIONIDENTIFIER=A0.TRANSACTIONIDENTIFIER
						and M0.NAMETYPECODE=M1.NAMETYPECODE
						and M0.NAMESEQUENCENUMBER=M1.NAMESEQUENCENUMBER)
			where checksum(M0.PAYMENTIDENTIFIER,M0.SENDERNAMEIDENTIFIER,M0.RECEIVERNAMEIDENTIFIER)
			   <> checksum(M1.PAYMENTIDENTIFIER,M1.SENDERNAMEIDENTIFIER,M1.RECEIVERNAMEIDENTIFIER)
			and A1.BATCHNO=@pnBatchNo
			group by A1.BATCHNO, A1.TRANSACTIONIDENTIFIER) M3	
						on (M3.BATCHNO=A1.BATCHNO
						and M3.TRANSACTIONIDENTIFIER=A1.TRANSACTIONIDENTIFIER)
	where S1.BATCHNO=@pnBatchNo
	-- Check for differences in the EDECASEDETAILS
	and CHECKSUM(A1.CASELANGUAGECODE,A1.CORRESPONDENCELANGUAGECODE,A1.CASETYPECODE_T,A1.CASEPROPERTYTYPECODE_T,A1.CASECATEGORYCODE_T,A1.CASESUBTYPECODE_T,A1.CASEBASISCODE_T,A1.CASECOUNTRYCODE_T,A1.ENTITYSIZE_T,A1.NUMBERCLAIMS,A1.NUMBERDESIGNS,A1.EXTENDEDNUMBERYEARS,A1.CASESTATUS,A1.CASERENEWALSTATUS,A1.CASESTATUSFLAG,A1.STOPREASONCODE_T)
	   =CHECKSUM(A0.CASELANGUAGECODE,A0.CORRESPONDENCELANGUAGECODE,A0.CASETYPECODE_T,A0.CASEPROPERTYTYPECODE_T,A0.CASECATEGORYCODE_T,A0.CASESUBTYPECODE_T,A0.CASEBASISCODE_T,A0.CASECOUNTRYCODE_T,A0.ENTITYSIZE_T,A0.NUMBERCLAIMS,A0.NUMBERDESIGNS,A0.EXTENDEDNUMBERYEARS,A0.CASESTATUS,A0.CASERENEWALSTATUS,A0.CASESTATUSFLAG,A0.STOPREASONCODE_T)
	and isnull(B3.MISMATCH,0)=0
	and isnull(C3.MISMATCH,0)=0
	and isnull(D3.MISMATCH,0)=0
	and isnull(E3.MISMATCH,0)=0
	and isnull(F3.MISMATCH,0)=0
	and isnull(G3.MISMATCH,0)=0
	and isnull(H3.MISMATCH,0)=0
	and isnull(I3.MISMATCH,0)=0
	and isnull(J3.MISMATCH,0)=0
	and isnull(K3.MISMATCH,0)=0
	and isnull(L3.MISMATCH,0)=0
	and isnull(M3.MISMATCH,0)=0
	)
	and BATCHNO = @pnBatchNo
	
	Set @nErrorCode=@@error
End

Return @nErrorCode
GO

Grant execute on dbo.ede_FlagIdentical to public
GO