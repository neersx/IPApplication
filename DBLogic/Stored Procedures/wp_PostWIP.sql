-----------------------------------------------------------------------------------------------------------------------------
-- Creation of wp_PostWIP
-----------------------------------------------------------------------------------------------------------------------------
If exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[wp_PostWIP]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
Begin
	Print '**** Drop Stored Procedure dbo.wp_PostWIP.'
	Drop procedure [dbo].[wp_PostWIP]
End
Print '**** Creating Stored Procedure dbo.wp_PostWIP...'
Print ''
GO

SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO


CREATE PROCEDURE dbo.wp_PostWIP
(
	@pnUserIdentityId	int,		-- Mandatory
	@psCulture		nvarchar(10) 	= null,
	@pbCalledFromCentura	bit		= 0,
	@pnEntityKey		int,		-- Mandatory	   Entity WIP is recorded against
	@pdtTransDate		datetime,	-- Mandatory	   Date of transaction
	@pnTransactionType	int		=402,		-- Default to WIP recording
	@pnWIPToNameNo		int,		-- Mandatory	
	@pnWIPToCaseId		int		= null,		-- For WIP recorded against Case, if null then WIP is recorded against Name
	@pnEmployeeNo		int		= null,		-- Staff member recorded with WIP
	@pnAssociateNo		int		= null,		-- NameNo of Associate who generated charge being disbursed
	
	@psInvoiceNumber	nvarchar(20)	= null,		-- Incoming invoice number being disbursed
	@psVerificationNumber	nvarchar(20)	= null,
	@pnRateNo		int		= null,		-- The RateNo for WIP generated by a rate calculation
	@psWIPCode		nvarchar(6),	-- Mandatory	
	@pdtTotalTime		datetime	= null,		-- Time used in calculation of WIP
	@pnTotalUnits		int		= null,		-- Time as units used in calculation of WIP
	@pnUnitsPerHour		smallint	= null,		-- Number of units that fit into one hour
	@pnChargeOutRate	decimal(11,2)	= null,		-- Charge out rate for time based charges
	@pnLocalValue		decimal(11,2),	-- Mandatory	-- Value of WIP
	@pnForeignValue		decimal(11,2)	= null,		-- Value of WIP in foreign currency
	
	@psForeignCurrency	nvarchar(3)	= null,		-- Currency of Foreign Value
	@pnExchangeRate		decimal(11,4)	= null,		-- Exchange rate between home currency and Foreign Currency
	@pnDiscountValue	decimal(11,2)	= null,		-- Calculated discount in local currency as positive number	
	@pnForeignDiscount	decimal(11,2)	= null,		-- Calculated discount in foreign currency as positive number
	@pnVariableFeeAmt	decimal(11,2)	= null,		-- Amount recorded as the variable fee
	@pnVariableFeeType	smallint	= null,
	@psVariableCurrency	nvarchar(6)	= null,		-- Currency of variable fee
	@pnFeeCriteriaNo	int		= null,		-- Criteria used to calculate fee
	@pnFeeUniqueId		int		= null,		-- Identifies Fee Calculation row used in calculation
	@pnQuotationNo		int		= null,
	
	@pnLocalCost		decimal(11,2)	= null,		-- Cost value of WIP raised in local currency
	@pnForeignCost		decimal(11,2)	= null,		-- Cost value of WIP raised in foreign currency
	@pnCostCalculation1	decimal(11,2)	= null,		-- Cost of WIP using cost rate 1 method
	@pnCostCalculation2	decimal(11,2)	= null,		-- Cost of WUP using cost rate 2 method
	@pnEnteredQuantity	int		= null,		-- A quantity used in calculation of of the WIP value
	@pnProductCode		int		= null,
	@pbGeneratedInAdvance	bit		= null,
	@pnNarrativeNo		int		= null,		-- Pointer to saved narrative
	@psNarrative		ntext		= null,		-- Free format text to be saved with WIP
 	@psFeeType		nvarchar(6)	= null,		-- Indicates the type of IP Office fee being paid
	
	@pnBaseFeeAmount	decimal(11,2)	=0,		-- Base fee being paid
	@pnAdditionalFee	decimal(11,2)	=0,		-- Component of fee calculated from @pnQuantityInCalc
	@psFeeTaxCode		nvarchar(3)	=null,		-- Tax code associated with Fee.
	@pnFeeTaxAmount		decimal(11,2)	=0,		-- Tax amount of the Fee
 	@pnAgeOfCase		smallint	= null,		-- The annuity number of Case being paid for inclusion on Fee List
	@pnMarginNo		int		= null,		-- The margin identity for the applied Margin
	@pnDebugFlag		tinyint		= 0,		--0=off,1=trace execution,2=dump data
	@pbDraftWIP		bit		= 0,		--0=process normal WIP 1=process draft WIP from billing
	@pnItemTransNo		int		= null,		-- Item TransNo of the open item for draft WIP.
	@bIsCreditWIP			bit		= 0,
	-- RFC7269
	@pbSeparateMarginFlag		bit		= null,	-- Margin to be stored as seperate WIP Item
	@pnLocalMargin			decimal(11,2)	= null,	-- Margin amount
	@pnForeignMargin		decimal(11,2)	= null,	-- Forign Margin Amount
	@pnDiscountForMargin		decimal(11,2)	= null,	-- Calculated discount for margin in local currency as positive number	
	@pnForeignDiscountForMargin	decimal(11,2)	= null,	-- Calculated discount for margin in foreig
	@psReasonCode			nvarchar(2)	= null,
	@pbReturnWIPKey			bit		= 0,
	 -- RFC7275
    @pbBillingDiscountFlag          bit             = 0,     -- Billing Discount Flag (used in Billing Wizard)
    @pbSuppressCommit		bit		= 0,	-- Supress commit/rollback transaction processing
    @pbSuppressPostToGL		bit		= 0,	-- Override Post to GL site control
    @psProtocolNo			nvarchar(20)	= null,	-- Protocol Key
    @psProtocolDateString		nvarchar(15)	= null,	-- Protocol Date String
    @psProfitCentreCode		nvarchar(6)	= null,
    @pbIsSplitWip			bit = 0,
	@pnSplitPercentage			decimal(5,2) = null,
    @pnNewTransKey	                int		= null	Output,	-- The new 1008 split transaction key
	@pnNewWipSeqKey		        int		= null	Output  -- The new wip sequence key
)
as
-- PROCEDURE:	wp_PostWIP
-- VERSION:	55
-- COPYRIGHT:	Copyright CPA Software Solutions (Australia) Pty Limited
-- DESCRIPTION:	Posts a Work In Progress transaction where the details are passed
--		as parameters to the procedure.

-- MODIFICATIONS :
-- Date		Who	Change		Version	Description
-- -----------	---	----------	-------	----------------------------------------------- 
-- 18 Nov 2008	MF	RFC7311		1	Procedure created. Cloned then modified from ts_PostTimeBatch.
-- 18 Mar 2009	MS	RFC6478		2	Added InvoiceNumber and AssociateNo in WORKINPROGRESS and WORKHISTORY tables.
-- 23 Mar 2009	MF	RFC6478		3	Add additional parameters so the Fee List entries can be created by calling
--									the procedure fl_InsertFeeListCase
-- 24 Mar 2009	DL			3	Corrected syntax errors.
-- 25 Mar 2009	MS	RFC7130		4	Add new parameter MarginNo and pass this parameter to 
--									WORKINPROGRESS and WORKHISTORY tables.
-- 01 Apr 2009	MF	RFC7835		5	Narrative for discount is not being correctly determined when posting transaction.
-- 14 Apr 2009	MF	RFC7873		6	VerificationNumber in WorkInProgress not being loaded.
-- 29 Mar 2010	AT	RFC3605		7	Add support for adding draft WIP through Billing Wizard.
-- 21 Apr 2010	AT	RFC8292		8	Fixed case sensitivity problem on output clause.
-- 19 May 2010	AT	RFC9092		9	Modified to apply bill in advance to discounts (SQA18602)
-- 21 Jun 2010	AT	RFC8291		10	Modified to create Credit WIP on Credit Notes.
-- 29 Jun 2010	MS	RFC7269		11	Added seperate WIP ITEM for margin
-- 20 Aug 2010  MS	RFC9685		12	Added DebtorNo in best fit criteria for narrative
-- 21 Sep 2010  MS	RFC5885		13  	Added DebtorNo in best fit criteria for narrative for Margin
-- 27 Oct 2010	AT	RFC8354		14	Modified to append Split WIP to an existing transaction with a Reason.
-- 28 Oct 2010  MS	RFC7275		15	Added BillingDiscountFlag for Billing Discount in Billing
-- 25 Mar 2011	AT	RFC8414		16	Make @pbSeparateMarginFlag optional, defaulting to site control.
--						Add @pbSuppressCommit site control
--						Fix bug of discount/margin referencing first WIP item raised under TransNo.
--						Call fi_CreateAndPostJournals
-- 04 Apr 2011	AT	RFC10072	17	Insert Protocol Key and Date.
-- 04 May 2011	AT	RFC10562	18	Insert CASEPROFITCENTRE.
-- 11 May 2011	KR	RFC10616	19	fixing merge issues
-- 16 May 2011  MS	RFC10641 	20	Fix sign error for credit Margin Item
-- 18 May 2011  MS	RFC10641 	21	Fix sign error for credit Margin Item
-- 07 Jul 2011	DL	RFC10830 	22	Specify database collation default to temp table columns of type varchar, nvarchar and char
-- 11 Jul 2011	KR	RFC10954 	23	Fix WIP creation issue with null value and balance when the margin is null.
-- 18 Oct 2011	AT	RFC11392	24	Modified @nMultiplier to reverse sign of Discounts.
-- 14 Dec 2011	AT	RFC11692	25	Fix @nTransNo passed in to fi_CreateAndPostJournals to @nAcctTransNo.
-- 01 Jun 2012	AT	RFC12118	26	Fix sign on discount for bill in advance draft WIP.
-- 11 Jun 2012  MS	R100686  	27	Fix Narrative best fit rule for Discount Renewal WIP Item
-- 15 Jan 2013	LP	RFC11614	28	Add new paramter ProfitCentreCode to be recorded against the WIP
-- 27 Feb 2013	AT	RFC13244	29	Fix passing of incorrect Transaction Type by retrieving from TRANSACTIONHEADER.
-- 05 Mar 2013	LP	RFC11614	30	If ProfitCentreCode has been set to NULL from calling code, then it should not be redefaulted.
-- 12 Mar 2013	KR	RFC12878	31	Fixed where the verification no is not copied to work history.
-- 08 Apr 2013  MS	RFC9011		32  	Return new item TransNo and WipSeqNo as output variables
-- 03 Jul 2013  vql	R13616		33  	Error when raising WIP via the action option from tasks pane.
-- 25 Jul 2013	AT	SDR9995		34	Added split wip flag.
-- 31 Jul 2013	KR	R12904		35	Added split percentage
-- 26 Nov 2013  MS	R12697		36  	Throw alert if case status is restricted for WIP
-- 02 Dec 2013	AT	RFC12864	37	Fixed draft status of WIP for margin as separate item.
-- 06 May 2014	LP	R13938		38	GeneratedInAdvance flag can be set to NULL from calling code.
-- 01 Aug 2014	KR	R14038		39	Call wpw_PerformBankWithdrawal if FeesList Autocreate & Finalise is on
-- 06 Nov 2014	LP	R40221		40	Add to Fee List if either BaseFeeAmount or AdditionalFee have non-zero values.
-- 13 Apr 2015	LP	R45860		41	When adding Margin as a separate WIP item, it should appear after the Discount for the main WIP item.
--						Any discount for the separate Margin WIP item should also appear after any discounts after the main WIP item.
-- 02 Jun 2015	KR	R47797		42	Calculate and pass TotalFee to fl_InsertFeeListCase
--						Also pass getdate() as parameter to both fl_InsertFeeListCase and wpw_PerformBankWithdrawal
-- 2 Sep 2015	DL	R50927		43	Case WIP Transfer incorrectly updating Control Totals hence causing Rollover errors
-- 07 Jan 2016  MS	R56172		44      Remove @pnDiscount check for margin discount as there is possibility that main item discount 
--						not there but margin discout is there and change @nMultiplier logic for surcharge,
--						use discount wip code and narrative for margin discount
-- 26 Dec 2016	MS	R47798		45	Call sp wp_AddToFeeList instead of fl_InsertFeeListCase and wpw_PerformBankWithdrawal
--						Set ADDTOFEELIST column value in WORKINPROGRESS table
-- 18 May 2017	MS	R71274		46	Correct @nMultiplier setting for Credit Wip discounts
-- 16 Oct 2017  MS	R35226		47      Send Premargin amount in AddToFeeList
-- 15 Jan 2018  AK	R63269		48      added additional logic to to check wip creation in future date
-- 06 Apr 2018  AK	R73620		49      fix the logic to determine POSTPERIOD
-- 02 May 2018	LP	R73417		50	Only Split WIP transactions should be filtered by highest WIPSEQNO from WORKINPROGRESS.
-- 11 Jun 2018  AK	R74222  	51      Created Save point to rollback sp generated transactions
-- 13 Nov 2018  MS	DR-44635	52	Set Multiplier to -1 for handling discounts and surcharges
-- 14 Nov 2018  AV  	DR-45358	53	Date conversion errors when creating cases and opening names in Chinese DB
-- 18 Mar 2019  MS      DR47448		54      Fix issue for FEELIST where local amount is being added insated of foreign

SET NOCOUNT OFF
SET CONCAT_NULL_YIELDS_NULL OFF

declare	@nErrorCode		int
declare @sSQLString		nvarchar(max)
declare @sSQLString2		nvarchar(max)
declare @sSQLString3		nvarchar(max)
declare @sOutputSQLString	nvarchar(max)
declare	@sTimeStamp		nvarchar(24)
declare @sAlertXML		nvarchar(400)

declare @nTranCountStart	int
declare @nAcctTransNo		int
declare @dtTransDate		datetime

declare @nAccountingSystemID	int

declare	@nOfficeID		int
declare	@nLogMinutes		int
declare	@nTransNo		int
declare @nBatchNo		int
declare	@bHexNumber		varbinary(128)

declare @sDiscountWipCode	nvarchar(6)
declare @sDiscountRenewalWipCode nvarchar(6)
declare @nDiscountNarrativeKey	int
declare @sDiscountNarrativeKey	nvarchar(10)
declare @bIsNarrativeTranslate	bit
declare @nMultiplier            int

declare @sMarginWipCode		nvarchar(6)
declare @sMarginRenewalWipCode	nvarchar(6)
declare @nMarginNarrativeKey	int
declare @sMarginNarrativeKey	nvarchar(10)

declare @dBillingDiscountRate	decimal(6,3)
declare @bExtractDiscount	bit

declare @nBaseWipSeqNo		int	-- the wip seq no of the main WIP item.
declare @nMarginWipSeqNo	int	-- the wip seq no of the main Margin item..
declare @nGLJournalCreation	int	-- Post to GL setting
declare @nResult		int	-- Result of GL posting

Declare @bFeeListAutoCreate	bit
Declare @nTotalFee		decimal(12,2)
Declare @dtWhenRequested	datetime
Declare @dtWipEndDate datetime
Declare @nPostPeriod		int

-- Initialise variables
Set @nErrorCode		= 0
Set @nAccountingSystemID= 2 	-- Time and Billing

-- Set the discount multiplier to -1 if the value/discount signs are the same.
Set @nMultiplier        = -1
Set @nBaseWipSeqNo      = 1

if (@pnDiscountValue <> 0)
Begin
	Set @nMarginWipSeqNo = 3
End
Else
Begin
	Set @nMarginWipSeqNo = 2
End

If  @pnDebugFlag>0
Begin
	set 	@sTimeStamp=convert(nvarchar,getdate(),126)
	RAISERROR ('%s wp_PostWIP-Commence Processing',0,1,@sTimeStamp ) with NOWAIT
End

If @nErrorCode=0
Begin
	Set @sSQLString="
	Select @nOfficeID=COLINTEGER
	from SITECONTROL
	where CONTROLID='Office For Replication'

	Select @nLogMinutes=COLINTEGER
	from SITECONTROL
	where CONTROLID='Log Time Offset'"

	exec @nErrorCode=sp_executesql @sSQLString,
				N'@nOfficeID	int		OUTPUT,
				  @nLogMinutes	int		OUTPUT',
				  @nOfficeID  = @nOfficeID	OUTPUT,
				  @nLogMinutes=@nLogMinutes	OUTPUT
End

-- Discounts required?
If @nErrorCode = 0
Begin
	Set @sSQLString = "
	select  @bExtractDiscount =
		CASE	when(D.COLBOOLEAN = 1)
			then CASE WHEN isnull(B.COLBOOLEAN,0) = 0 THEN 1
			     ELSE 0
			     END	
			ELSE 0
			END
	from	SITECONTROL D
	left join SITECONTROL B	on (B.CONTROLID = 'DiscountNotInBilling')
	WHERE 	D.CONTROLID = 'Discounts'"

	exec @nErrorCode=sp_executesql @sSQLString,
			N'@bExtractDiscount	bit		OUTPUT',
			  @bExtractDiscount	= @bExtractDiscount	OUTPUT
End

If (@nErrorCode = 0 and @pbSeparateMarginFlag is null)
Begin
	Set @sSQLString = "Select @pbSeparateMarginFlag = COLBOOLEAN
			FROM SITECONTROL
			WHERE CONTROLID = 'Margin as Separate WIP'"
	
	exec @nErrorCode=sp_executesql @sSQLString,
			N'@pbSeparateMarginFlag	bit OUTPUT',
			  @pbSeparateMarginFlag	= @pbSeparateMarginFlag	OUTPUT
End

If (@pbDraftWIP = 1)
Begin
	Set @pbSuppressCommit = 1
End

If @pnWIPToCaseId is not null
Begin
	If (Select S.PREVENTWIP
		FROM STATUS S
		JOIN CASES C on (C.STATUSCODE = S.STATUSCODE)
		where C.CASEID = @pnWIPToCaseId) = 1
	Begin
		Set @sAlertXML = dbo.fn_GetAlertXML('CaseStatusRestrictionForWip', 'The selected Case cannot be used as the case status restricts WIP transactions.',
    							null, null, null, null, null)
  		RAISERROR(@sAlertXML, 14, 1)
  		Set @nErrorCode = @@ERROR
	End
End

------------------------
-- Get the TransactionNo
------------------------
If (@nErrorCode = 0 and @pbDraftWIP = 0 and @pnItemTransNo is null)
Begin
	-----------------------------------------------
	-- Use a separate transaction for this so that 
	-- the LASTINTERNALCODE and TRANSACTIONINFO are 
	-- locked for a minimal amount of time.
	-----------------------------------------------
	if (@pbSuppressCommit = 0)
	Begin
		Select @nTranCountStart = @@TranCount
		IF @@TranCount > 0
			Begin
				SAVE TRANSACTION T1
			End
		Else
			Begin
				BEGIN TRANSACTION T1
			End	
	End

	Set @sSQLString="Insert into TRANSACTIONINFO(TRANSACTIONDATE) values(getdate())
			Set @nTransNo=SCOPE_IDENTITY()"

	exec @nErrorCode=sp_executesql @sSQLString,
				N'@nTransNo	int	OUTPUT',
				  @nTransNo=@nTransNo	OUTPUT


	--------------------------------------------------------------
	-- Load a common area accessible from the database server with
	-- the UserIdentityId and the TransactionNo just generated.
	-- This will be used by the audit logs.
	--------------------------------------------------------------
	If @nErrorCode=0
	Begin
		Set @bHexNumber=substring(cast(isnull(@pnUserIdentityId,'') as varbinary),1,4)+ 
				substring(cast(isnull(@nTransNo,'') as varbinary),1,4)+ 
				substring(cast(isnull(@nBatchNo,'') as varbinary),1,4) +
				substring(cast(isnull(@nOfficeID,'') as varbinary),1,4) +
				substring(cast(isnull(@nLogMinutes,'') as varbinary),1,4)
		SET CONTEXT_INFO @bHexNumber

		----------------------------------------
		-- Reserve the TRANSACTIONHEADER.TRANSNO
		----------------------------------------
		set @sSQLString="
			UPDATE LASTINTERNALCODE 
			SET INTERNALSEQUENCE 	= INTERNALSEQUENCE + 1,
			    @nAcctTransNo    	= INTERNALSEQUENCE + 1
			WHERE  TABLENAME = 'TRANSACTIONHEADER'"

		Exec @nErrorCode=sp_executesql @sSQLString, 
				N'@nAcctTransNo		int		OUTPUT',
				  @nAcctTransNo		=@nAcctTransNo	OUTPUT
	End

	-------------------------------
	-- In case the LASTINTERNALCODE 
	-- row is not present yet.
	-------------------------------
	If @nErrorCode=0
	and @nAcctTransNo is null
	Begin
		set @sSQLString="
			INSERT LASTINTERNALCODE (TABLENAME, INTERNALSEQUENCE)
			VALUES ('TRANSACTIONHEADER',1)"

		Exec @nErrorCode=sp_executesql @sSQLString

		If @nErrorCode=0
		Begin
			Set @nAcctTransNo = 1
		End
	End

	-----------------------------------
	-- Commit transaction if successful
	-----------------------------------
	if (@pbSuppressCommit = 0)
	Begin
	If @@TranCount > @nTranCountStart
	Begin
		If @nErrorCode = 0
			COMMIT TRANSACTION
		Else
			ROLLBACK TRANSACTION T1
	End
	End


	If  @pnDebugFlag>0
	Begin
		set 	@sTimeStamp=convert(nvarchar,getdate(),126)
		RAISERROR ('%s wp_PostWIP-@nAcctTransNo=%d',0,1,@sTimeStamp,@nAcctTransNo ) with NOWAIT
	End
End

-- Set TransNo for draft WIP
if (@pnItemTransNo is not null)
Begin
	Set @nAcctTransNo = @pnItemTransNo
End

create table #OUTPUTTABLE (
			TransNo		int,
			WipCode nvarchar(6) collate database_default, 
			WipSeqNo smallint, 
			DiscountFlag BIT,
			MarginFlag BIT)


If @nErrorCode = 0
Begin
	-- validate the transaction date and get the post period.
	exec @nErrorCode = dbo.acw_ValidateTransactionDate
				@pnUserIdentityId	= @pnUserIdentityId,
				@psCulture		= @psCulture,
				@pbCalledFromCentura	= @pbCalledFromCentura,
				@pdtItemDate		= @pdtTransDate,
				@pnModule		= 1,
				@pbIgnoreWarnings	= 1,
				@pnPeriodId		= @nPostPeriod output
	if (@pnDebugFlag = 1)
	Begin
		print 'Validated Trans Date'
	End
End


If @nErrorCode = 0
and @nAcctTransNo is not null
Begin
	--------------------------------
	-- Begin processing of the batch
	--------------------------------
	

	-- Transaction header will already exist for drafts and when
	-- appending to an existing transaction.
	if (@pbDraftWIP = 0 and @pnItemTransNo is null)
	Begin
		if (@pbSuppressCommit = 0)
		Begin
			Select @nTranCountStart = @@TranCount
			
			IF @@TranCount > 0
				Begin
					SAVE TRANSACTION T2
				End
			Else
				Begin
					BEGIN TRANSACTION T2
				End
		End

		-- Create Transaction Header
		If @nErrorCode = 0
		Begin
			If  @pnDebugFlag>0
			Begin
				set 	@sTimeStamp=convert(nvarchar,getdate(),126)
				RAISERROR ('%s wp_PostWIP-Begin Transaction Header processing',0,1,@sTimeStamp ) with NOWAIT
			End

			set @sSQLString="
			Insert into TRANSACTIONHEADER
			(ENTITYNO, TRANSNO, 
			TRANSDATE, 
			TRANSTYPE, BATCHNO, EMPLOYEENO, 
			USERID, ENTRYDATE, SOURCE, 
			TRANSTATUS, GLSTATUS, TRANPOSTPERIOD, 
			TRANPOSTDATE, IDENTITYID)"

			set @sSQLString2="
			select 	@pnEntityKey 			as EntityNo,
				@nAcctTransNo			as TransNo, 
				@pdtTransDate			as TransDate,
				@pnTransactionType		as TransType, 
				null 				as Batch, 
				@pnEmployeeNo			as EmployeeNo,
				dbo.fn_GetUser() 		as UserID,
				getdate() 			as EntryDate,
				@nAccountingSystemID		as Source,
				1 				as TransStatus,	-- Active
				case when(S.COLINTEGER > 0)
					then 0 			-- Awaiting interface
					else null 		-- Ignore
				end				as GLStatus,
				@nPostPeriod 
								as TranPostPeriod,
				getdate() 			as TranPostDate,
				@pnUserIdentityId 		as IdentityID
			from SITECONTROL S
			where S.CONTROLID = 'GL Journal Creation'"

			Set @sSQLString=@sSQLString+@sSQLString2

			Exec @nErrorCode=sp_executesql @sSQLString, 
					N'@pnEntityKey		int,
					  @nAcctTransNo		int,
					  @nPostPeriod		int,
					  @pdtTransDate		datetime,
					  @pnEmployeeNo		int,
					  @pnUserIdentityId	int,
					  @nAccountingSystemID	int,
					  @pnTransactionType	int',
					  @pnEntityKey		= @pnEntityKey,
					  @nAcctTransNo		= @nAcctTransNo,
					  @nPostPeriod		= @nPostPeriod,
					  @pdtTransDate		= @pdtTransDate,
					  @pnEmployeeNo		= @pnEmployeeNo,
					  @pnUserIdentityId	= @pnUserIdentityId,
					  @nAccountingSystemID	= @nAccountingSystemID,
					  @pnTransactionType	= @pnTransactionType

			If  @nErrorCode <> 0
			and @pnDebugFlag > 0
			Begin
				set 	@sTimeStamp=convert(nvarchar,getdate(),126)
				RAISERROR ('%s wp_PostWIP-Dumping data',0,1,@sTimeStamp ) with NOWAIT
				select	@sTimeStamp+' wp_PostWIP-'+'Selected into TRANSACTIONHEADER:'

				-- Do not change error code while in debug
				Exec sp_executesql @sSQLString2, 
					N'@pnEntityKey		int,
					  @nAcctTransNo		int,
					  @nPostPeriod		int,
					  @pdtTransDate		datetime,
					  @pnEmployeeNo		int,
					  @pnUserIdentityId	int,
					  @nAccountingSystemID	int,
					  @pnTransactionType	int',
					  @pnEntityKey		= @pnEntityKey,
					  @nAcctTransNo		= @nAcctTransNo,
					  @pdtTransDate		= @pdtTransDate,
					  @pnEmployeeNo		= @pnEmployeeNo,
					  @nPostPeriod		= @nPostPeriod,
					  @pnUserIdentityId	= @pnUserIdentityId,
					  @nAccountingSystemID	= @nAccountingSystemID,
					  @pnTransactionType	= @pnTransactionType
			End

			If  @nErrorCode = 0
			and @pnDebugFlag>1
			Begin
				set 	@sTimeStamp=convert(nvarchar,getdate(),126)
				select	@sTimeStamp+' wp_PostWIP-'+'Contents of TRANSACTIONHEADER:'
				select 	* from TRANSACTIONHEADER T
				where	T.TRANSNO = @nAcctTransNo
				and	T.ENTITYNO = @pnEntityKey
				order by T.ENTITYNO, T.TRANSNO
			End
		End
	End

	If @nErrorCode=0
	Begin
		If  @pnDebugFlag>0
		Begin
			set 	@sTimeStamp=convert(nvarchar,getdate(),126)
			RAISERROR ('%s wp_PostWIP-Begin post period validation',0,1,@sTimeStamp ) with NOWAIT
		End

		set @sSQLString = "
		select 	@dtTransDate = T.TRANSDATE,
		@pnTransactionType = T.TRANSTYPE
		from	TRANSACTIONHEADER T
		where	T.TRANSNO = @nAcctTransNo
		and	T.ENTITYNO = @pnEntityKey
		and	T.TRANPOSTPERIOD is null"

		Exec @nErrorCode=sp_executesql @sSQLString, 
				N'@dtTransDate		datetime	OUTPUT,
				  @pnTransactionType int OUTPUT,
				  @pnEntityKey		int,
				  @nAcctTransNo		int',
				  @dtTransDate		= @dtTransDate	OUTPUT,
				  @pnTransactionType = @pnTransactionType OUTPUT,
				  @pnEntityKey		= @pnEntityKey,
				  @nAcctTransNo		= @nAcctTransNo

		-- Note: this validation should have been performed before now.
		-- This is included as a failsafe to prevent a SQL error.
		If @nErrorCode = 0
		and @dtTransDate is not null	
		and @pbDraftWIP = 0 	
		Begin
			Set @sAlertXML = dbo.fn_GetAlertXML('AC12', 'Unable to locate accounting period for {0:d}.  Either the date is incorrect, or the period has not been defined.',
							convert(nvarchar, @dtTransDate, 112), null, null, null, null)
			RAISERROR(@sAlertXML, 14, 1)
			Set @nErrorCode = @@ERROR
		End
		Else
		Begin			
			set @sSQLString = "SELECT TOP 1 @dtWipEndDate = ENDDATE
								FROM PERIOD WHERE POSTINGCOMMENCED IS NOT NULL
								ORDER BY POSTINGCOMMENCED DESC"

			Exec @nErrorCode=sp_executesql @sSQLString, 
					N'@dtWipEndDate		datetime	OUTPUT',
					  @dtWipEndDate		= @dtWipEndDate	OUTPUT
					  			
			If @nErrorCode = 0
			and @pdtTransDate > getdate()			
			and @pdtTransDate > @dtWipEndDate	
			Begin
				Set @sAlertXML = dbo.fn_GetAlertXML('AC208', 'The item date cannot be in the future. It must be within the current accounting period or up to and including the current date.',
								convert(nvarchar, @pdtTransDate, 112), null, null, null, null)
				RAISERROR(@sAlertXML, 14, 1)
				Set @nErrorCode = @@ERROR
			End	

		End
	End
	
	------------------
	-- A C C O U N T
	-- Create Account
	------------------
	If @nErrorCode=0
	Begin
		If  @pnDebugFlag>0
		Begin
			set 	@sTimeStamp=convert(nvarchar,getdate(),126)
			RAISERROR ('%s wp_PostWIP-Begin creating Accounts',0,1,@sTimeStamp ) with NOWAIT
		End

		set @sSQLString="
		insert	ACCOUNT (ENTITYNO, NAMENO, BALANCE, CRBALANCE)"

		set @sSQLString2="
		select	@pnEntityKey, N.NAMENO, 0, 0
		from	NAME N
		left join ACCOUNT A on (A.ENTITYNO=@pnEntityKey
				    and A.NAMENO=N.NAMENO)
		where	N.NAMENO=@pnWIPToNameNo
		and	A.NAMENO is null"

		set @sSQLString = @sSQLString+@sSQLString2

		Exec @nErrorCode=sp_executesql @sSQLString, 
				N'@pnEntityKey		int,
				  @pnWIPToNameNo	int',
				  @pnEntityKey		= @pnEntityKey,
				  @pnWIPToNameNo	= @pnWIPToNameNo

		If  @nErrorCode <> 0
		and @pnDebugFlag > 0
		Begin
			set 	@sTimeStamp=convert(nvarchar,getdate(),126)
			RAISERROR ('%s wp_PostWIP-Dumping data',0,1,@sTimeStamp ) with NOWAIT
			select	@sTimeStamp+' wp_PostWIP-'+'Selected into ACCOUNT:'

			-- Do not change error code while in debug
			Exec sp_executesql @sSQLString2, 
				N'@pnEntityKey		int,
				  @pnWIPToNameNo	int',
				  @pnEntityKey		= @pnEntityKey,
				  @pnWIPToNameNo	= @pnWIPToNameNo
		End
	End


	-----------------------------------
	-- W O R K I N P R O G R E S S
	-- Load the WorkInProgress table
	-----------------------------------
	If @nErrorCode = 0
	Begin
		If  @pnDebugFlag>0
		Begin
			set 	@sTimeStamp=convert(nvarchar,getdate(),126)
			RAISERROR ('%s wp_PostWIP-Begin chargeable Work In Progress processing',0,1,@sTimeStamp ) with NOWAIT
		End

		set @sSQLString="
		Insert into WORKINPROGRESS
		(ENTITYNO, TRANSNO, WIPSEQNO,
		TRANSDATE, POSTDATE,
		RATENO, WIPCODE, CASEID, 
		ACCTENTITYNO, ACCTCLIENTNO, EMPLOYEENO, ASSOCIATENO, INVOICENUMBER,
		TOTALTIME, TOTALUNITS, UNITSPERHOUR, 
		CHARGEOUTRATE, FOREIGNCURRENCY, FOREIGNVALUE, 
		EXCHRATE, LOCALVALUE, BALANCE, 
		FOREIGNBALANCE, COSTCALCULATION1, COSTCALCULATION2, MARGINNO,
		EMPPROFITCENTRE, EMPFAMILYNO, EMPOFFICECODE, 
		NARRATIVENO, SHORTNARRATIVE, LONGNARRATIVE, 
		[STATUS], QUOTATIONNO, PRODUCTCODE,
		DISCOUNTFLAG, GENERATEDINADVANCE,
		VARIABLEFEEAMT,VARIABLEFEETYPE,VARIABLEFEECURR,
		FEECRITERIANO,FEEUNIQUEID,LOCALCOST,FOREIGNCOST,
		ENTEREDQUANTITY,VERIFICATIONNUMBER, CASEPROFITCENTRE, MARGINFLAG, BILLINGDISCOUNTFLAG, SPLITPERCENTAGE, ADDTOFEELIST, PREMARGINAMOUNT)"
		set @sSQLString2="
		select 	T.ENTITYNO,
			T.TRANSNO, 
			ISNULL(WIP.MAXWIPSEQNO,0) + 1 	as WipSeqNo,
			T.TRANSDATE,
			T.TRANPOSTDATE,
			@pnRateNo		as RateNo,
			@psWIPCode		as WipCode,
			@pnWIPToCaseId		as CaseId,
			case when (@pnWIPToCaseId is null and @pnWIPToNameNo is not null) or @pbIsSplitWip=1 then T.ENTITYNO else NULL end 
						as AcctEntityNo,
			case when @pnWIPToCaseId is null or @pbIsSplitWip=1 then @pnWIPToNameNo end 
						as AcctClientNo,
			E.EMPLOYEENO		as EmployeeNo,
			@pnAssociateNo		as AssociateNo,
			@psInvoiceNumber	as InvoiceNumber,
			-- Ensure date portion is set to Centura value of 01 Jan 1899
			Case When(@pdtTotalTime is not null)
				-- Ensure date portion is set to value of 01 Jan 1899
				Then '1899-01-01T'+convert(nvarchar,@pdtTotalTime,108)	
			End			as TotalTime,
			@pnTotalUnits		as TotalUnits,
			@pnUnitsPerHour		as UnitsPerHour,
			@pnChargeOutRate	as ChargeOutRate,
			@psForeignCurrency	as ForeignCurrency,
			Case when ISNULL(@pbSeparateMarginFlag,0) = 0 THEN @pnForeignValue
				ELSE (@pnForeignValue - ISNULL(@pnForeignMargin,0)) END as ForeignValue,

			@pnExchangeRate		as ExchRate,
			Case when ISNULL(@pbSeparateMarginFlag,0) = 0 THEN @pnLocalValue
				ELSE (@pnLocalValue - ISNULL(@pnLocalMargin,0)) END as LocalValue,
			Case when ISNULL(@pbSeparateMarginFlag,0) = 0 THEN @pnLocalValue 
				ELSE (@pnLocalValue - ISNULL(@pnLocalMargin,0)) END  as Balance,
			Case when ISNULL(@pbSeparateMarginFlag,0) = 0 THEN @pnForeignValue
				ELSE (@pnForeignValue - ISNULL(@pnForeignMargin,0)) END as ForeignBalance,
			@pnCostCalculation1	as CostCalculation1,
			@pnCostCalculation2	as CostCalculation2,
			@pnMarginNo		as MarginNo,"+char(10)+
			CASE WHEN @pbCalledFromCentura = 1 
			THEN "ISNULL(@psProfitCentreCode,E.PROFITCENTRECODE) as EmpProfitCentre,"
			ELSE "@psProfitCentreCode as EmpProfitCentre," END
			+char(10)+
			"N.FAMILYNO		as EmpFamilyNo,
			(select min(T.TABLECODE)
			from TABLEATTRIBUTES T
			where T.GENERICKEY = cast(E.EMPLOYEENO as nvarchar(20))
			and T.PARENTTABLE = 'NAME'
			and T.TABLETYPE = 44) 	as EmpOffice,
			@pnNarrativeNo		as NarrativeNo,
			CASE WHEN(datalength(@psNarrative)<=508) 
				THEN @psNarrative
				ELSE NULL
			END			as ShortNarrative,
			CASE WHEN(datalength(@psNarrative)>508) 
				THEN @psNarrative
				ELSE NULL
			END			as LongNarrative,
			case when @pbDraftWIP = 1 then 0 else 1 end as Status,
			@pnQuotationNo		as QuotationNo,
			@pnProductCode		as ProductCode,
			CASE WHEN @pbBillingDiscountFlag = 1 then 1 ELSE 0 END as DiscountFlag,
			@pbGeneratedInAdvance	as GeneratedInAdvance,
			@pnVariableFeeAmt	as VariableFeeAmt,
			@pnVariableFeeType	as VariableFeeType,
			@psVariableCurrency	as VariableFeeCurr,
			@pnFeeCriteriaNo	as FeeCriteriaNo,
			@pnFeeUniqueId		as FeeUniqueId,
			@pnLocalCost		as LocalCost,
			@pnForeignCost		as ForeignCost,
			@pnEnteredQuantity	as EnteredQuantity,
			@psVerificationNumber	as VerificationNumber,
			C.PROFITCENTRECODE	as CaseProfitCentre,
			0			as MarginFlag,
                        @pbBillingDiscountFlag  as BillingDiscountFlag,
                        @pnSplitPercentage as SplitPercentage,
			CASE WHEN @psFeeType is not null then 1 else 0 end as AddToFeeList,
                        CASE WHEN @psForeignCurrency is not null
                                then case when @pbDraftWIP = 1 and ISNULL(@pbSeparateMarginFlag,0) = 1 THEN @pnForeignValue ELSE (@pnForeignValue - ISNULL(@pnForeignMargin,0)) END
                                else case when @pbDraftWIP = 1 and ISNULL(@pbSeparateMarginFlag,0) = 1 THEN @pnLocalValue ELSE (@pnLocalValue - ISNULL(@pnLocalMargin,0)) END
                        end as PreMarginAmount
		from 	TRANSACTIONHEADER T
		left join EMPLOYEE E	on (E.EMPLOYEENO = @pnEmployeeNo)
		left join NAME N	on (N.NAMENO = @pnEmployeeNo)
		left join (SELECT MAX(WIPSEQNO) MAXWIPSEQNO, ENTITYNO, TRANSNO 
			From WORKINPROGRESS
			Where TRANSNO = @nAcctTransNo
			and ENTITYNO = @pnEntityKey
			Group by ENTITYNO, TRANSNO) as WIP ON (WIP.ENTITYNO = T.ENTITYNO and WIP.TRANSNO = T.TRANSNO)
		left join CASES C	on (C.CASEID = @pnWIPToCaseId)
		where	T.TRANSNO = @nAcctTransNo
		and	T.ENTITYNO = @pnEntityKey"

		Set @sOutputSQLString = char(10)+"OUTPUT INSERTED.TRANSNO, INSERTED.WIPCODE, INSERTED.WIPSEQNO, INSERTED.DISCOUNTFLAG, INSERTED.MARGINFLAG"+char(10)+
						"INTO #OUTPUTTABLE"+CHAR(10)
		
			Set @sSQLString=@sSQLString+@sOutputSQLString+@sSQLString2

		Exec @nErrorCode=sp_executesql @sSQLString, 
					N'@nAcctTransNo		int,
					  @pnEntityKey		int,
					  @pdtTransDate		datetime,
					  @pnTransactionType	int,
					  @pnWIPToNameNo	int,
					  @pnWIPToCaseId	int,
					  @pnEmployeeNo		int,
					  @pnAssociateNo	int,
					  @psInvoiceNumber	nvarchar(20),
					  @psVerificationNumber	nvarchar(20),
					  @pnRateNo		int,
					  @psWIPCode		nvarchar(6),
					  @pdtTotalTime		datetime,
					  @pnTotalUnits		int,
					  @pnUnitsPerHour	smallint,
					  @pnChargeOutRate	decimal(11,2),
					  @pnLocalValue		decimal(11,2),
					  @pnForeignValue	decimal(11,2),
					  @psForeignCurrency	nvarchar(3),
					  @pnExchangeRate	decimal(11,4),
					  @pnVariableFeeAmt	decimal(11,2),
					  @pnVariableFeeType	smallint,
					  @psVariableCurrency	nvarchar(6),
					  @pnFeeCriteriaNo	int,
					  @pnFeeUniqueId	int,
					  @pnQuotationNo	int,
					  @pnLocalCost		decimal(11,2),
					  @pnForeignCost	decimal(11,2),
					  @pnCostCalculation1	decimal(11,2),
					  @pnCostCalculation2	decimal(11,2),
					  @pnMarginNo		int,
					  @pnEnteredQuantity	int,
					  @pnProductCode	int,
					  @pbGeneratedInAdvance	bit,
					  @pnNarrativeNo	int,
					  @psNarrative		ntext,
					  @pbDraftWIP		bit,
					  @pbSeparateMarginFlag	bit,
					  @pnForeignMargin	decimal(11,2),
					  @pnLocalMargin	decimal(11,2),
                      @pbBillingDiscountFlag bit,
                      @psProfitCentreCode	nvarchar(6),
                      @pbIsSplitWip bit,
                      @pnSplitPercentage	decimal(5,2),
					  @psFeeType		nvarchar(6)',
					  @nAcctTransNo		=@nAcctTransNo,
					  @pnEntityKey		=@pnEntityKey,
					  @pdtTransDate		=@pdtTransDate,
					  @pnTransactionType	=@pnTransactionType,
					  @pnWIPToNameNo	=@pnWIPToNameNo,
					  @pnWIPToCaseId	=@pnWIPToCaseId,
					  @pnEmployeeNo		=@pnEmployeeNo,
					  @pnAssociateNo	=@pnAssociateNo,
					  @psInvoiceNumber	=@psInvoiceNumber,
					  @psVerificationNumber	=@psVerificationNumber,
					  @pnRateNo		=@pnRateNo,
					  @psWIPCode		=@psWIPCode,
					  @pdtTotalTime		=@pdtTotalTime,
					  @pnTotalUnits		=@pnTotalUnits,
					  @pnUnitsPerHour	=@pnUnitsPerHour,
					  @pnChargeOutRate	=@pnChargeOutRate,
					  @pnLocalValue		=@pnLocalValue,
					  @pnForeignValue	=@pnForeignValue,
					  @psForeignCurrency	=@psForeignCurrency,
					  @pnExchangeRate	=@pnExchangeRate,
					  @pnVariableFeeAmt	=@pnVariableFeeAmt,
					  @pnVariableFeeType	=@pnVariableFeeType,
					  @psVariableCurrency	=@psVariableCurrency,
					  @pnFeeCriteriaNo	=@pnFeeCriteriaNo,
					  @pnFeeUniqueId	=@pnFeeUniqueId,
					  @pnQuotationNo	=@pnQuotationNo,
					  @pnLocalCost		=@pnLocalCost,
					  @pnForeignCost	=@pnForeignCost,
					  @pnCostCalculation1	=@pnCostCalculation1,
					  @pnCostCalculation2	=@pnCostCalculation2,
					  @pnMarginNo		=@pnMarginNo,
					  @pnEnteredQuantity	=@pnEnteredQuantity,
					  @pnProductCode	=@pnProductCode,
					  @pbGeneratedInAdvance	=@pbGeneratedInAdvance,
					  @pnNarrativeNo	=@pnNarrativeNo,
					  @psNarrative		=@psNarrative,
					  @pbDraftWIP		=@pbDraftWIP,
					  @pbSeparateMarginFlag	=@pbSeparateMarginFlag,
					  @pnForeignMargin	=@pnForeignMargin,
					  @pnLocalMargin	=@pnLocalMargin,
                      @pbBillingDiscountFlag =@pbBillingDiscountFlag,
                      @psProfitCentreCode	=@psProfitCentreCode,
                      @pbIsSplitWip =@pbIsSplitWip,
                      @pnSplitPercentage = @pnSplitPercentage,
					  @psFeeType		= @psFeeType


		If  @nErrorCode <> 0
		and @pnDebugFlag > 0
		Begin
			set 	@sTimeStamp=convert(nvarchar,getdate(),126)
			RAISERROR ('%s wp_PostWIP-Dumping data',0,1,@sTimeStamp ) with NOWAIT
			select	@sTimeStamp+' wp_PostWIP-'+'Selected into chargeable WORKINPROGRESS:'

			-- Do not change error code while in debug
			Exec sp_executesql @sSQLString2, 
					N'@nAcctTransNo		int,
					  @pnEntityKey		int,
					  @pdtTransDate		datetime,
					  @pnTransactionType	int,
					  @pnWIPToNameNo	int,
					  @pnWIPToCaseId	int,
					  @pnEmployeeNo		int,
					  @pnAssociateNo	int,
					  @psInvoiceNumber	nvarchar(20),
					  @psVerificationNumber	nvarchar(20),
					  @pnRateNo		int,
					  @psWIPCode		nvarchar(6),
					  @pdtTotalTime		datetime,
					  @pnTotalUnits		int,
					  @pnUnitsPerHour	smallint,
					  @pnChargeOutRate	decimal(11,2),
					  @pnLocalValue		decimal(11,2),
					  @pnForeignValue	decimal(11,2),
					  @psForeignCurrency	nvarchar(3),
					  @pnExchangeRate	decimal(11,4),
					  @pnVariableFeeAmt	decimal(11,2),
					  @pnVariableFeeType	smallint,
					  @psVariableCurrency	nvarchar(6),
					  @pnFeeCriteriaNo	int,
					  @pnFeeUniqueId	int,
					  @pnQuotationNo	int,
					  @pnLocalCost		decimal(11,2),
					  @pnForeignCost	decimal(11,2),
					  @pnCostCalculation1	decimal(11,2),
					  @pnCostCalculation2	decimal(11,2),
					  @pnMarginNo		int,
					  @pnEnteredQuantity	int,
					  @pnProductCode	int,
					  @pbGeneratedInAdvance	bit,
					  @pnNarrativeNo	int,
					  @psNarrative		ntext,
					  @pbDraftWIP		bit,
					  @pbSeparateMarginFlag	bit,
					  @pnForeignMargin	decimal(11,2),
					  @pnLocalMargin	decimal(11,2),
					  @psProfitCentreCode	nvarchar(6),
					  @pnSplitPercentage decimal(4,2),
					  @psFeeType		nvarchar(6)', 
					  @nAcctTransNo		=@nAcctTransNo,
					  @pnEntityKey		=@pnEntityKey,
					  @pdtTransDate		=@pdtTransDate,
					  @pnTransactionType	=@pnTransactionType,
					  @pnWIPToNameNo	=@pnWIPToNameNo,
					  @pnWIPToCaseId	=@pnWIPToCaseId,
					  @pnEmployeeNo		=@pnEmployeeNo,
					  @pnAssociateNo	=@pnAssociateNo,
					  @psInvoiceNumber	=@psInvoiceNumber,
					  @psVerificationNumber	=@psVerificationNumber,
					  @pnRateNo		=@pnRateNo,
					  @psWIPCode		=@psWIPCode,
					  @pdtTotalTime		=@pdtTotalTime,
					  @pnTotalUnits		=@pnTotalUnits,
					  @pnUnitsPerHour	=@pnUnitsPerHour,
					  @pnChargeOutRate	=@pnChargeOutRate,
					  @pnLocalValue		=@pnLocalValue,
					  @pnForeignValue	=@pnForeignValue,
					  @psForeignCurrency	=@psForeignCurrency,
					  @pnExchangeRate	=@pnExchangeRate,
					  @pnVariableFeeAmt	=@pnVariableFeeAmt,
					  @pnVariableFeeType	=@pnVariableFeeType,
					  @psVariableCurrency	=@psVariableCurrency,
					  @pnFeeCriteriaNo	=@pnFeeCriteriaNo,
					  @pnFeeUniqueId	=@pnFeeUniqueId,
					  @pnQuotationNo	=@pnQuotationNo,
					  @pnLocalCost		=@pnLocalCost,
					  @pnForeignCost	=@pnForeignCost,
					  @pnCostCalculation1	=@pnCostCalculation1,
					  @pnCostCalculation2	=@pnCostCalculation2,
					  @pnMarginNo		=@pnMarginNo,
					  @pnEnteredQuantity	=@pnEnteredQuantity,
					  @pnProductCode	=@pnProductCode,
					  @pbGeneratedInAdvance	=@pbGeneratedInAdvance,
					  @pnNarrativeNo	=@pnNarrativeNo,
					  @psNarrative		=@psNarrative,
					  @pbDraftWIP		=@pbDraftWIP,
					  @pbSeparateMarginFlag =@pbSeparateMarginFlag,
					  @pnForeignMargin	=@pnForeignMargin,
					  @pnLocalMargin	=@pnLocalMargin,
					  @psProfitCentreCode	=@psProfitCentreCode,
					  @pnSplitPercentage = @pnSplitPercentage,
					  @psFeeType		= @psFeeType

		End

		If  @nErrorCode = 0
		and @pnDebugFlag>1
		Begin
			set 	@sTimeStamp=convert(nvarchar,getdate(),126)
			select	@sTimeStamp+' wp_PostWIP-'+'Contents chargeable WORKINPROGRESS:'
			select 	* from WORKINPROGRESS W
			where	W.TRANSNO = @nAcctTransNo
			and	W.ENTITYNO = @pnEntityKey
			order by W.ENTITYNO, W.TRANSNO
		End
	End
	
	If @nErrorCode = 0
	Begin
		Select @nBaseWipSeqNo = min(WipSeqNo)
		from #OUTPUTTABLE
	End
	
	-----------------------------------
	-- D I S C O U N T
	-- Create discount Work In Progress 
	-- if discount value supplied
	-----------------------------------
	
	If @nErrorCode = 0 and @bExtractDiscount = 1
	and (@pnDiscountValue<>0 or (@pbSeparateMarginFlag = 1 and Isnull(@pnDiscountForMargin,0) <> 0))
	Begin
		If  @pnDebugFlag>0
		Begin
			set 	@sTimeStamp=convert(nvarchar,getdate(),126)
			RAISERROR ('%s wp_PostWIP-Begin discount Work In Progress processing',0,1,@sTimeStamp ) with NOWAIT
		End

		Set @sSQLString="
		select 	@sDiscountWipCode = DW.COLCHARACTER,
			@sDiscountRenewalWipCode = RD.COLCHARACTER,
			@nDiscountNarrativeKey = N.NARRATIVENO,
			@bIsNarrativeTranslate = T.COLBOOLEAN
		from SITECONTROL DW
		cross join SITECONTROL RD	
		cross join SITECONTROL NS
		cross join SITECONTROL T
		-- Discount Narrative is ignored if either of the WIP Codes are present
		left join NARRATIVE N		on (N.NARRATIVECODE = NS.COLCHARACTER
						and DW.COLCHARACTER IS NULL
						and RD.COLCHARACTER IS NULL)
		where DW.CONTROLID = 'Discount WIP Code'
		and RD.CONTROLID = 'Discount Renewal WIP Code'
		and NS.CONTROLID = 'Discount Narrative'
		and T.CONTROLID = 'Narrative Translate'"

		Exec @nErrorCode=sp_executesql @sSQLString, 
				N'@sDiscountWipCode		nvarchar(6)			OUTPUT,
				  @sDiscountRenewalWipCode	nvarchar(6)			OUTPUT,
				  @nDiscountNarrativeKey	int				OUTPUT,
				  @bIsNarrativeTranslate	bit				OUTPUT',
				  @sDiscountWipCode		= @sDiscountWipCode		OUTPUT,
				  @sDiscountRenewalWipCode	= @sDiscountRenewalWipCode	OUTPUT,
				  @nDiscountNarrativeKey	= @nDiscountNarrativeKey	OUTPUT,
				  @bIsNarrativeTranslate	= @bIsNarrativeTranslate	OUTPUT

		If  @pnDebugFlag>0
		Begin
			set 	@sTimeStamp=convert(nvarchar,getdate(),126)
			RAISERROR ('%s wp_PostWIP-Discount WIP Code=%s',0,1,@sTimeStamp,  @sDiscountWipCode) with NOWAIT
			RAISERROR ('%s wp_PostWIP-Discount Renewal WIP Code=%s',0,1,@sTimeStamp,  @sDiscountRenewalWipCode) with NOWAIT
			set @sDiscountNarrativeKey = cast(@nDiscountNarrativeKey as nvarchar)
			RAISERROR ('%s wp_PostWIP-Discount Narrative Key=%s',0,1,@sTimeStamp, @sDiscountNarrativeKey) with NOWAIT
			if @bIsNarrativeTranslate=1
				RAISERROR ('%s wp_PostWIP-Is Narrative Translated=Yes',0,1,@sTimeStamp) with NOWAIT
			else 
				RAISERROR ('%s wp_PostWIP-Is Narrative Translated=No',0,1,@sTimeStamp) with NOWAIT
		End

                If @nErrorCode = 0 and @pnDiscountValue <> 0
		Begin
			set @sSQLString=
			"Insert into WORKINPROGRESS"+char(10)+
			"(ENTITYNO, TRANSNO, WIPSEQNO,"+char(10)+
			"DISCOUNTFLAG, WIPCODE, NARRATIVENO,"+char(10)+
			"SHORTNARRATIVE, LONGNARRATIVE,"+char(10)+
			"TOTALTIME, TOTALUNITS, UNITSPERHOUR,"+char(10)+
			"CHARGEOUTRATE, FOREIGNCURRENCY, FOREIGNVALUE,"+char(10)+
			"EXCHRATE, LOCALVALUE, BALANCE,"+char(10)+
			"FOREIGNBALANCE, COSTCALCULATION1, COSTCALCULATION2,"+char(10)+
			"TRANSDATE, POSTDATE, RATENO, CASEID,"+char(10)+
			"ACCTENTITYNO, ACCTCLIENTNO, EMPLOYEENO,"+char(10)+			
			"ASSOCIATENO, INVOICENUMBER,"+char(10)+
			"EMPPROFITCENTRE, EMPFAMILYNO, EMPOFFICECODE,"+char(10)+
			"STATUS, QUOTATIONNO, PRODUCTCODE,"+char(10)+
			"GENERATEDINADVANCE,"+char(10)+
			"CASEPROFITCENTRE,"+char(10)+
			"MARGINFLAG,"+char(10)+
                        "PREMARGINAMOUNT,"+char(10)+
			"SPLITPERCENTAGE)"+char(10)

			set @sSQLString2=
			"select	W.ENTITYNO, W.TRANSNO,"+char(10)+
			"ISNULL(WIP.MAXWIPSEQNO,0) + 1 	as WipSeqNo,"+CHAR(10)+
			"1 as DiscountFlag,"+char(10)+
			-- Use Discount Renewal WIP Code for renewals and Discount WIP Code for the rest.  If neither, keep original WIPCODE.
			"case when T.RENEWALFLAG = 1"+char(10)+
			"	then "+case when @sDiscountRenewalWipCode is null
						then 'W.WIPCODE'
						else dbo.fn_WrapQuotes(@sDiscountRenewalWipCode,0,@pbCalledFromCentura)
						end+char(10)+
			"	else "+case when @sDiscountWipCode is null
						then 'W.WIPCODE'
						else dbo.fn_WrapQuotes(@sDiscountWipCode,0,@pbCalledFromCentura)
						end+char(10)+
			"	end as WipCode,"+char(10)

			-----------------------------------------
			-- If translated, use the translation and
			-- default to the untranslated narrative
			-----------------------------------------
			If @bIsNarrativeTranslate = 1
			and (@sDiscountRenewalWipCode is not null or
			     @sDiscountWipCode is not null or
			     @nDiscountNarrativeKey is not null)
			Begin
				set @sSQLString2=@sSQLString2+
				"N.NARRATIVENO as NarrativeNo,"+char(10)+
				"case when datalength(isnull(NTR.TRANSLATEDTEXT,N.NARRATIVETEXT))<=508"+char(10)+
				"	then isnull(NTR.TRANSLATEDTEXT,N.NARRATIVETEXT) else NULL end as ShortNarrative,"+char(10)+
				"case when datalength(isnull(NTR.TRANSLATEDTEXT,N.NARRATIVETEXT))<=508"+char(10)+
				"	then NULL else isnull(NTR.TRANSLATEDTEXT,N.NARRATIVETEXT) end as LongNarrative,"+char(10)
			End
			Else If (@sDiscountRenewalWipCode is not null or
				 @sDiscountWipCode is not null or
				 @nDiscountNarrativeKey is not null)
			Begin
				set @sSQLString2=@sSQLString2+
				"isnull(N.NARRATIVENO, W.NARRATIVENO) as NarrativeNo,"+char(10)+
				"case when N.NARRATIVENO is not null"+char(10)+
				"	then case when datalength(N.NARRATIVETEXT)<=508"+char(10)+
				"		then N.NARRATIVETEXT else NULL end"+char(10)+
				"	else W.SHORTNARRATIVE end as ShortNarrative,"+char(10)+
				"case when N.NARRATIVENO is not null"+char(10)+
				"	then case when datalength(N.NARRATIVETEXT)<=508"+char(10)+
				"		then NULL else N.NARRATIVETEXT end"+char(10)+
				"	else W.LONGNARRATIVE end as LongNarrative,"+char(10)
			End
			Else
			Begin
				set @sSQLString2=@sSQLString2+
				"W.NARRATIVENO as NarrativeNo,"+char(10)+
				"W.SHORTNARRATIVE as ShortNarrative,"+char(10)+
				"W.LONGNARRATIVE as LongNarrative,"+char(10)
			End

			set @sSQLString2=@sSQLString2+
			"NULL as TotalTime, NULL as TotalUnits, NULL as UnitsperHour,"+char(10)+
			"NULL as ChargeoutRate, W.FOREIGNCURRENCY as ForeignCurrency,"+char(10)+
			CASE WHEN(@pnForeignDiscount is null) THEN 'NULL'
				WHEN ISNULL(@pbSeparateMarginFlag,0) = 1 
					THEN CAST((@pnForeignDiscount - Isnull(@pnForeignDiscountForMargin,0)) * @nMultiplier as varchar(13))
				ELSE CAST(@pnForeignDiscount * @nMultiplier as varchar(13))
			END +" as ForeignValue,"+char(10)+
			"W.EXCHRATE as ExchRate, "+char(10)+
			CASE WHEN ISNULL(@pbSeparateMarginFlag,0) = 1 
				THEN CAST((@pnDiscountValue - Isnull(@pnDiscountForMargin,0))* @nMultiplier as varchar(13))
				ELSE CAST(@pnDiscountValue * @nMultiplier as varchar(13))
			END+" as LocalValue,"+char(10)+
			CASE WHEN ISNULL(@pbSeparateMarginFlag,0) = 1 
				THEN CAST((@pnDiscountValue - Isnull(@pnDiscountForMargin,0))* @nMultiplier as varchar(13))
				ELSE CAST(@pnDiscountValue * @nMultiplier as varchar(13))
			END+" as Balance,"+char(10)+
			CASE WHEN(@pnForeignDiscount is null) THEN 'NULL'
				WHEN ISNULL(@pbSeparateMarginFlag,0) = 1 
					THEN CAST((@pnForeignDiscount - Isnull(@pnForeignDiscountForMargin,0)) * @nMultiplier as varchar(13))
				ELSE CAST(@pnForeignDiscount * @nMultiplier as varchar(13))
			END +" as ForeignBalance,"+char(10)+
			"NULL as CostCalculation1, NULL as CostCalculation2,"+char(10)+
			"W.TRANSDATE, W.POSTDATE, W.RATENO, W.CASEID,"+char(10)+
			"W.ACCTENTITYNO, W.ACCTCLIENTNO, W.EMPLOYEENO, W.ASSOCIATENO, W.INVOICENUMBER,"+char(10)+
			"W.EMPPROFITCENTRE, W.EMPFAMILYNO, W.EMPOFFICECODE,"+char(10)+
			-- Active
			case when @pbDraftWIP = 1 then "0" else "1" end + " as Status,"+char(10)+		
			"W.QUOTATIONNO, W.PRODUCTCODE,"+char(10)+
			"W.GENERATEDINADVANCE,"+char(10)+
			"W.CASEPROFITCENTRE, 0 as MarginFlag,"+char(10)+
                        CASE WHEN(@pnForeignDiscount is not null) 
                                THEN case when @pbDraftWIP = 1 and ISNULL(@pbSeparateMarginFlag,0) = 1 THEN CAST(@pnForeignDiscount as varchar(13)) ELSE CAST((@pnForeignDiscount - Isnull(@pnForeignDiscountForMargin,0)) * @nMultiplier as varchar(13)) END
				ELSE case when @pbDraftWIP = 1 and ISNULL(@pbSeparateMarginFlag,0) = 1 THEN CAST(@pnDiscountValue as varchar(13)) ELSE CAST((@pnDiscountValue - Isnull(@pnDiscountForMargin,0))* @nMultiplier as varchar(13)) END
                        End + " as PreMarginAmount, "+char(10)+
			"null as SplitPercentage"+char(10)
			Set @sSQLString3 = 			
			"From	WORKINPROGRESS W"+char(10)+
			"left join WIPTEMPLATE T on (T.WIPCODE = W.WIPCODE)"+char(10)+
			"left join CASES C on (C.CASEID = W.CASEID)"+char(10)+
			"left join (SELECT MAX(WIPSEQNO) MAXWIPSEQNO, ENTITYNO, TRANSNO"+char(10)+
			"	From WORKINPROGRESS"+char(10)+
			"	Where TRANSNO ="+CAST(@nAcctTransNo as nvarchar(12))+char(10)+
			"	and ENTITYNO ="+CAST(@pnEntityKey as nvarchar(12))+char(10)+
			"	Group by ENTITYNO, TRANSNO) as WIP ON (WIP.ENTITYNO = W.ENTITYNO and WIP.TRANSNO = W.TRANSNO)"+char(10)

			If @nErrorCode = 0
			and (@sDiscountWipCode is not null or
			    @sDiscountRenewalWipCode is not null)
			Begin
				set @sSQLString3=@sSQLString3+
				"left join CASENAME CN2"+char(10)+
				"	on (CN2.CASEID = W.CASEID"+char(10)+
				"	and CN2.NAMETYPE = 'D'"+char(10)+
				"	and (CN2.EXPIRYDATE is null or CN2.EXPIRYDATE>getdate())"+char(10)+
				"	and CN2.SEQUENCE = (select min(SEQUENCE) from CASENAME CN3"+char(10)+
				"	    where CN3.CASEID = W.CASEID"+char(10)+
				"	    and CN3.NAMETYPE = 'D'"+char(10)+
				"	    and(CN3.EXPIRYDATE is null or CN3.EXPIRYDATE>getdate())))"+char(10)+
				-- The narrative is derived via a best fit for the WIP ocde
				"left join NARRATIVE N on (N.NARRATIVENO ="+char(10)+
				"	(Select"+char(10)+
				"	convert(int,"+char(10)+
				"	substring("+char(10)+
				"	max ("+char(10)+
				"	CASE WHEN (NRL.DEBTORNO IS NULL) THEN '0' ELSE '1' END +"+char(10)+  
				"	CASE WHEN (NRL.EMPLOYEENO IS NULL) THEN '0' ELSE '1' END +"+char(10)+
				"	CASE WHEN (NRL.CASETYPE IS NULL) THEN '0' ELSE '1' END +"+char(10)+
				"	CASE WHEN (NRL.PROPERTYTYPE IS NULL) THEN '0' ELSE '1' END +"+char(10)+
				"	CASE WHEN (NRL.CASECATEGORY IS NULL) THEN '0' ELSE '1' END +"+char(10)+
				"	CASE WHEN (NRL.SUBTYPE IS NULL) THEN '0' ELSE '1' END +"+char(10)+
				"	CASE WHEN (NRL.TYPEOFMARK is NULL) THEN '0' ELSE '1' END +"+char(10)+
				"	CAST(NRL.NARRATIVENO as varchar(5))), 8, 5))"+char(10)+
				"	from NARRATIVERULE NRL"+char(10)+
				"	where NRL.WIPCODE = case when T.RENEWALFLAG = 1"+char(10)+
				"				then "+case when @sDiscountRenewalWipCode is null
									then 'W.WIPCODE'
									else dbo.fn_WrapQuotes(@sDiscountRenewalWipCode,0,@pbCalledFromCentura)
									end+char(10)+
				"				else "+case when @sDiscountWipCode is null
									then 'W.WIPCODE'
									else dbo.fn_WrapQuotes(@sDiscountWipCode,0,@pbCalledFromCentura)
									end+char(10)+
				"				end"+char(10)+
			        "	AND (	NRL.DEBTORNO	= isnull(CN2.NAMENO,W.ACCTCLIENTNO) OR NRL.DEBTORNO IS NULL )"+char(10)+
				"	AND (	NRL.EMPLOYEENO 	= W.EMPLOYEENO OR NRL.EMPLOYEENO IS NULL )"+char(10)+
				"	AND (	NRL.CASETYPE	= C.CASETYPE	OR NRL.CASETYPE	is NULL )"+char(10)+
				"	AND (	NRL.PROPERTYTYPE = C.PROPERTYTYPE OR NRL.PROPERTYTYPE IS NULL )"+char(10)+
				"	AND (	NRL.CASECATEGORY = C.CASECATEGORY OR NRL.CASECATEGORY IS NULL )"+char(10)+
				"	AND (	NRL.SUBTYPE 	= C.SUBTYPE 	OR NRL.SUBTYPE IS NULL )"+char(10)+
				"	AND (	NRL.TYPEOFMARK	= C.TYPEOFMARK	OR NRL.TYPEOFMARK IS NULL )"+char(10)+
				-- As there could be multiple Narrative rules for a WIP Code with the same best fit score, 
				-- a NarrativeKey and other Narrative columns should only be defaulted if there is only 
				-- a single row with the maximum best fit score.
				"and not exists (Select 1"+char(10)+
						"from NARRATIVERULE NRL2"+char(10)+
						"where  NRL2.WIPCODE = NRL.WIPCODE"+char(10)+ 
						"AND (	NRL2.DEBTORNO 		= NRL.DEBTORNO		OR (NRL2.DEBTORNO 	IS NULL AND NRL.DEBTORNO 	IS NULL) )"+char(10)+
						"AND (	NRL2.EMPLOYEENO 	= NRL.EMPLOYEENO	OR (NRL2.EMPLOYEENO 	IS NULL AND NRL.EMPLOYEENO 	IS NULL) )"+char(10)+
						"AND (	NRL2.CASETYPE		= NRL.CASETYPE		OR (NRL2.CASETYPE 	IS NULL AND NRL.CASETYPE	IS NULL) )"+char(10)+
						"AND (	NRL2.PROPERTYTYPE 	= NRL.PROPERTYTYPE 	OR (NRL2.PROPERTYTYPE 	IS NULL AND NRL.PROPERTYTYPE 	IS NULL) )"+char(10)+
						"AND (	NRL2.CASECATEGORY 	= NRL.CASECATEGORY 	OR (NRL2.CASECATEGORY 	IS NULL AND NRL.CASECATEGORY 	IS NULL) )"+char(10)+
						"AND (	NRL2.SUBTYPE 		= NRL.SUBTYPE 		OR (NRL2.SUBTYPE 	IS NULL AND NRL.SUBTYPE	 	IS NULL) )"+char(10)+
						"AND (	NRL2.TYPEOFMARK		= NRL.TYPEOFMARK	OR (NRL2.TYPEOFMARK	IS NULL AND NRL.TYPEOFMARK	IS NULL) )"+char(10)+
						"AND NRL2.NARRATIVERULENO <> NRL.NARRATIVERULENO)"+char(10)+		
						"))"+char(10)
			End
			Else If (@nDiscountNarrativeKey is not null)
			Begin
				set @sSQLString3=@sSQLString3+
				"left join NARRATIVE N on (N.NARRATIVENO = "+CAST(@nDiscountNarrativeKey as varchar(10))+")"+char(10)
			End

			-- If translated, a best fit is required to locate the language
			If @bIsNarrativeTranslate = 1
			and (@sDiscountRenewalWipCode is not null or
			     @sDiscountWipCode is not null or
			     @nDiscountNarrativeKey is not null)
			Begin
				set @sSQLString3=@sSQLString3+
				"left join CASENAME CN"+char(10)+
				"	on (CN.CASEID = W.CASEID"+char(10)+
				"	and CN.NAMETYPE = 'D'"+char(10)+
				"	and (CN.EXPIRYDATE is null or CN.EXPIRYDATE>getdate())"+char(10)+
				"	and CN.SEQUENCE = (select min(SEQUENCE) from CASENAME CN"+char(10)+
				"	    where CN.CASEID = W.CASEID"+char(10)+
				"	    and CN.NAMETYPE = 'D'"+char(10)+
				"	    and(CN.EXPIRYDATE is null or CN.EXPIRYDATE>getdate())))"+char(10)+
				"left join NARRATIVETRANSLATE NTR on (NTR.NARRATIVENO = N.NARRATIVENO"+char(10)+
				"				and NTR.LANGUAGE = "+char(10)+
				"	(select convert(int,"+char(10)+
				"	substring("+char(10)+
				"	max ("+char(10)+
				"	CASE WHEN (NL.NAMENO IS NULL)	THEN '0' ELSE '1' END +"+char(10)+
				"	CASE WHEN (NL.PROPERTYTYPE IS NULL) THEN '0' ELSE '1' END +"+char(10)+
				"	CASE WHEN (NL.ACTION IS NULL)	THEN '0' ELSE '1' END +"+char(10)+		
				"	convert(varchar,NL.LANGUAGE)), 4,10))"+char(10)+
				"	FROM NAMELANGUAGE NL"+char(10)+
				"	WHERE (NL.NAMENO = isnull(CN.NAMENO,W.ACCTCLIENTNO) OR NL.NAMENO IS NULL )"+char(10)+
				"	AND (NL.PROPERTYTYPE = C.PROPERTYTYPE OR NL.PROPERTYTYPE IS NULL )"+char(10)+
				"	AND (NL.ACTION = (Select TOP 1 A.ACTION"+char(10)+
				"  	    		from OPENACTION A"+char(10)+
				"	   		where A.CASEID = W.CASEID"+char(10)+
				"	    		order by A.POLICEEVENTS DESC, A.DATEUPDATED DESC)"+char(10)+
				"	    OR NL.ACTION IS NULL )))"+char(10)
			End

			set @sSQLString3=@sSQLString3+
			"where W.TRANSNO="+CAST(@nAcctTransNo as varchar(12))+char(10)+
			"and W.ENTITYNO="+CAST(@pnEntityKey as varchar(12))+char(10)+
			"and W.WIPSEQNO="+CAST(@nBaseWipSeqNo as varchar(12))

			Set @sOutputSQLString = char(10)+"OUTPUT INSERTED.TRANSNO, INSERTED.WIPCODE, INSERTED.WIPSEQNO, INSERTED.DISCOUNTFLAG, INSERTED.MARGINFLAG"+char(10)+
						"INTO #OUTPUTTABLE"+CHAR(10)

			exec (@sSQLString+@sOutputSQLString+@sSQLString2+@sSQLString3)

			Select @nErrorCode =@@Error
		End

		If  @nErrorCode <> 0
		and @pnDebugFlag > 0
		Begin
			set 	@sTimeStamp=convert(nvarchar,getdate(),126)
			RAISERROR ('%s wp_PostWIP-Printing discount WIP SQL',0,1,@sTimeStamp) with NOWAIT
			print @sSQLString
			print @sSQLString2
			print @sSQLString3
			RAISERROR ('%s wp_PostWIP-Dumping data',0,1,@sTimeStamp ) with NOWAIT
			select	@sTimeStamp+' wp_PostWIP-'+'Selected into discount WORKINPROGRESS:'

			-- Do not change error code while in debug
			Exec (@sSQLString2+@sSQLString3) 
		End

		If  @nErrorCode = 0
		and @pnDebugFlag>1
		Begin
			set 	@sTimeStamp=convert(nvarchar,getdate(),126)
			select	@sTimeStamp+' wp_PostWIP-'+'Contents discount WORKINPROGRESS:'
			select 	* from WORKINPROGRESS W
			where	W.TRANSNO  = @nAcctTransNo
			and	W.ENTITYNO = @pnEntityKey
			and	W.WIPSEQNO = (SELECT MAX(WipSeqNo) from #OUTPUTTABLE)
			order by W.ENTITYNO, W.TRANSNO, W.WIPSEQNO
		End
	End
	
	
	-----------------------------------
	-- M A R G I N
	-- Create Margin Work In Progress 
	-- if Margin is to be stored as seperate
	-- WIP Item
	-----------------------------------
	If @nErrorCode = 0
	and @pbSeparateMarginFlag = 1 and (ISNULL(@pnLocalMargin,0) <> 0 or ISNULL(@pnForeignMargin,0) <> 0)
	Begin
		If  @pnDebugFlag>0
		Begin
			set 	@sTimeStamp=convert(nvarchar,getdate(),126)
			RAISERROR ('%s wp_PostWIP-Begin Margin Work In Progress processing',0,1,@sTimeStamp ) with NOWAIT
		End

		Set @sSQLString="
		select 	@sMarginWipCode		= DW.COLCHARACTER,
			@sMarginRenewalWipCode	= RD.COLCHARACTER,
			@nMarginNarrativeKey	= N.NARRATIVENO,
			@bIsNarrativeTranslate	= T.COLBOOLEAN
		from SITECONTROL DW
		cross join SITECONTROL RD	
		cross join SITECONTROL NS
		cross join SITECONTROL T
		-- Discount Narrative is ignored if either of the WIP Codes are present
		left join NARRATIVE N		on (N.NARRATIVECODE = NS.COLCHARACTER
						and DW.COLCHARACTER IS NULL
						and RD.COLCHARACTER IS NULL)
		where DW.CONTROLID = 'Margin WIP Code'
		and RD.CONTROLID = 'Margin Renewal WIP Code'
		and NS.CONTROLID = 'Margin Narrative'
		and T.CONTROLID = 'Narrative Translate'"

		Exec @nErrorCode=sp_executesql @sSQLString, 
				N'@sMarginWipCode		nvarchar(6)			OUTPUT,
				  @sMarginRenewalWipCode	nvarchar(6)			OUTPUT,
				  @nMarginNarrativeKey		int				OUTPUT,
				  @bIsNarrativeTranslate	bit				OUTPUT',
				  @sMarginWipCode		= @sMarginWipCode		OUTPUT,
				  @sMarginRenewalWipCode	= @sMarginRenewalWipCode	OUTPUT,
				  @nMarginNarrativeKey		= @nMarginNarrativeKey		OUTPUT,
				  @bIsNarrativeTranslate	= @bIsNarrativeTranslate	OUTPUT
		
		If  @pnDebugFlag>0
		Begin
			set 	@sTimeStamp=convert(nvarchar,getdate(),126)
			RAISERROR ('%s wp_PostWIP-Margin WIP Code=%s',0,1,@sTimeStamp,  @sMarginWipCode) with NOWAIT
			RAISERROR ('%s wp_PostWIP-Margin Renewal WIP Code=%s',0,1,@sTimeStamp,  @sMarginRenewalWipCode) with NOWAIT
			set @sMarginNarrativeKey = cast(@nMarginNarrativeKey as nvarchar)
			RAISERROR ('%s wp_PostWIP-Margin Narrative Key=%s',0,1,@sTimeStamp, @sMarginNarrativeKey) with NOWAIT
			if @bIsNarrativeTranslate=1
				RAISERROR ('%s wp_PostWIP-Is Narrative Translated=Yes',0,1,@sTimeStamp) with NOWAIT
			else 
				RAISERROR ('%s wp_PostWIP-Is Narrative Translated=No',0,1,@sTimeStamp) with NOWAIT
		End
		
		If @nErrorCode = 0
		Begin
			set @sSQLString=
			"Insert into WORKINPROGRESS"+char(10)+
			"(ENTITYNO, TRANSNO, WIPSEQNO,"+char(10)+
			"DISCOUNTFLAG, WIPCODE, NARRATIVENO,"+char(10)+
			"SHORTNARRATIVE, LONGNARRATIVE,"+char(10)+
			"TOTALTIME, TOTALUNITS, UNITSPERHOUR,"+char(10)+
			"CHARGEOUTRATE, FOREIGNCURRENCY, FOREIGNVALUE,"+char(10)+
			"EXCHRATE, LOCALVALUE, BALANCE,"+char(10)+
			"FOREIGNBALANCE, COSTCALCULATION1, COSTCALCULATION2, MARGINNO,"+char(10)+
			"TRANSDATE, POSTDATE, RATENO, CASEID,"+char(10)+
			"ACCTENTITYNO, ACCTCLIENTNO, EMPLOYEENO,"+char(10)+			
			"ASSOCIATENO, INVOICENUMBER,"+char(10)+
			"EMPPROFITCENTRE, EMPFAMILYNO, EMPOFFICECODE,"+char(10)+
			"STATUS, QUOTATIONNO, PRODUCTCODE,"+char(10)+
			"GENERATEDINADVANCE,"+char(10)+
			"CASEPROFITCENTRE, MARGINFLAG, SPLITPERCENTAGE)"+char(10)

			set @sSQLString2=
			"select	W.ENTITYNO, W.TRANSNO,"+char(10)+
			"ISNULL(WIP.MAXWIPSEQNO,0) + 1 	as WipSeqNo,"+CHAR(10)+
			"0 as DiscountFlag,"+char(10)+
			-- Use Margin Renewal WIP Code for renewals and Margin WIP Code for the rest.  If neither, keep original WIPCODE.
			"case when T.RENEWALFLAG = 1"+char(10)+
			"	then "+case when @sMarginRenewalWipCode is null
						then 'W.WIPCODE'
						else dbo.fn_WrapQuotes(@sMarginRenewalWipCode,0,@pbCalledFromCentura)
						end+char(10)+
			"	else "+case when @sMarginWipCode is null
						then 'W.WIPCODE'
						else dbo.fn_WrapQuotes(@sMarginWipCode,0,@pbCalledFromCentura)
						end+char(10)+
			"	end as WipCode,"+char(10)

			-----------------------------------------
			-- If translated, use the translation and
			-- default to the untranslated narrative
			-----------------------------------------
			If @bIsNarrativeTranslate = 1
			and (@sMarginRenewalWipCode is not null or
			     @sMarginWipCode is not null or
			     @nMarginNarrativeKey is not null)
			Begin
				set @sSQLString2=@sSQLString2+
				"N.NARRATIVENO as NarrativeNo,"+char(10)+
				"case when datalength(isnull(NTR.TRANSLATEDTEXT,N.NARRATIVETEXT))<=508"+char(10)+
				"	then isnull(NTR.TRANSLATEDTEXT,N.NARRATIVETEXT) else NULL end as ShortNarrative,"+char(10)+
				"case when datalength(isnull(NTR.TRANSLATEDTEXT,N.NARRATIVETEXT))<=508"+char(10)+
				"	then NULL else isnull(NTR.TRANSLATEDTEXT,N.NARRATIVETEXT) end as LongNarrative,"+char(10)
			End
			Else If (@sMarginRenewalWipCode is not null or
				 @sMarginWipCode is not null or
				 @nMarginNarrativeKey is not null)
			Begin
				set @sSQLString2=@sSQLString2+
				"isnull(N.NARRATIVENO, W.NARRATIVENO) as NarrativeNo,"+char(10)+
				"case when N.NARRATIVENO is not null"+char(10)+
				"	then case when datalength(N.NARRATIVETEXT)<=508"+char(10)+
				"		then N.NARRATIVETEXT else NULL end"+char(10)+
				"	else W.SHORTNARRATIVE end as ShortNarrative,"+char(10)+
				"case when N.NARRATIVENO is not null"+char(10)+
				"	then case when datalength(N.NARRATIVETEXT)<=508"+char(10)+
				"		then NULL else N.NARRATIVETEXT end"+char(10)+
				"	else W.LONGNARRATIVE end as LongNarrative,"+char(10)
			End
			Else
			Begin
				set @sSQLString2=@sSQLString2+
				"W.NARRATIVENO as NarrativeNo,"+char(10)+
				"W.SHORTNARRATIVE as ShortNarrative,"+char(10)+
				"W.LONGNARRATIVE as LongNarrative,"+char(10)
			End

			set @sSQLString2=@sSQLString2+
			"NULL as TotalTime, NULL as TotalUnits, NULL as UnitsperHour,"+char(10)+
			"NULL as ChargeoutRate, W.FOREIGNCURRENCY as ForeignCurrency,"+char(10)+
			CASE WHEN(@pnForeignMargin is null)
				THEN 'NULL'
				ELSE CAST(@pnForeignMargin as varchar(13))
			END +" as ForeignValue,"+char(10)+
			"W.EXCHRATE as ExchRate, "+char(10)+
			CASE WHEN @pnLocalMargin is null
				THEN 'NULL'
				ELSE CAST(@pnLocalMargin as varchar(13))
			END +" as LocalValue,"+char(10)+
			CASE WHEN @pnLocalMargin is null
				THEN 'NULL'
				ELSE CAST(@pnLocalMargin as varchar(13))
			END +" as Balance,"+char(10)+
			CASE WHEN(@pnForeignMargin is null)
				THEN 'NULL'
				ELSE CAST(@pnForeignMargin as varchar(13))
			END +" as ForeignBalance,"+char(10)+			
			"NULL as CostCalculation1, NULL as CostCalculation2, "+ CHAR(10)+  
			"NULL as MarginNo,"+char(10)+
			"W.TRANSDATE, W.POSTDATE, W.RATENO, W.CASEID,"+char(10)+
			"W.ACCTENTITYNO, W.ACCTCLIENTNO, W.EMPLOYEENO, W.ASSOCIATENO, W.INVOICENUMBER,"+char(10)+
			"W.EMPPROFITCENTRE, W.EMPFAMILYNO, W.EMPOFFICECODE,"+char(10)+
			-- Active
			case when @pbDraftWIP = 1 then "0" else "1" end + " as Status,"+char(10)+
			"W.QUOTATIONNO, W.PRODUCTCODE,"+char(10)+
			"W.GENERATEDINADVANCE,"+char(10)+
			"W.CASEPROFITCENTRE, 1 as MarginFlag,"+char(10)+
			"null as SplitPercentage"+char(10)
			Set @sSQLString3 = 			
			"From	WORKINPROGRESS W"+char(10)+
			"left join WIPTEMPLATE T on (T.WIPCODE = W.WIPCODE)"+char(10)+
			"left join CASES C on (C.CASEID = W.CASEID)"+char(10)+
			"left join (SELECT MAX(WIPSEQNO) MAXWIPSEQNO, ENTITYNO, TRANSNO"+char(10)+
			"	From WORKINPROGRESS"+char(10)+
			"	Where TRANSNO ="+CAST(@nAcctTransNo as nvarchar(12))+char(10)+
			"	and ENTITYNO ="+CAST(@pnEntityKey as nvarchar(12))+char(10)+
			"	Group by ENTITYNO, TRANSNO) as WIP ON (WIP.ENTITYNO = W.ENTITYNO and WIP.TRANSNO = W.TRANSNO)"+char(10)

			If @nErrorCode = 0
			and (@sMarginWipCode is not null or
			    @sMarginRenewalWipCode is not null)
			Begin
				set @sSQLString3=@sSQLString3+
				-- The narrative is derived via a best fit for the WIP ocde
				"left join CASENAME CN2"+char(10)+
				"	on (CN2.CASEID = W.CASEID"+char(10)+
				"	and CN2.NAMETYPE = 'D'"+char(10)+
				"	and (CN2.EXPIRYDATE is null or CN2.EXPIRYDATE>getdate())"+char(10)+
				"	and CN2.SEQUENCE = (select min(SEQUENCE) from CASENAME CN3"+char(10)+
				"	    where CN3.CASEID = W.CASEID"+char(10)+
				"	    and CN3.NAMETYPE = 'D'"+char(10)+
				"	    and(CN3.EXPIRYDATE is null or CN3.EXPIRYDATE>getdate())))"+char(10)+
				-- The narrative is derived via a best fit for the WIP ocde
				"left join NARRATIVE N on (N.NARRATIVENO ="+char(10)+
				"	(Select"+char(10)+
				"	convert(int,"+char(10)+
				"	substring("+char(10)+
				"	max ("+char(10)+
				"	CASE WHEN (NRL.DEBTORNO IS NULL) THEN '0' ELSE '1' END +"+char(10)+  
				"	CASE WHEN (NRL.EMPLOYEENO IS NULL) THEN '0' ELSE '1' END +"+char(10)+
				"	CASE WHEN (NRL.CASETYPE IS NULL) THEN '0' ELSE '1' END +"+char(10)+
				"	CASE WHEN (NRL.PROPERTYTYPE IS NULL) THEN '0' ELSE '1' END +"+char(10)+
				"	CASE WHEN (NRL.CASECATEGORY IS NULL) THEN '0' ELSE '1' END +"+char(10)+
				"	CASE WHEN (NRL.SUBTYPE IS NULL) THEN '0' ELSE '1' END +"+char(10)+
				"	CASE WHEN (NRL.TYPEOFMARK is NULL) THEN '0' ELSE '1' END +"+char(10)+
				"	CAST(NRL.NARRATIVENO as varchar(5))), 8, 5))"+char(10)+
				"	from NARRATIVERULE NRL"+char(10)+
				"	where NRL.WIPCODE = case when T.RENEWALFLAG = 1"+char(10)+
				"				then "+case when @sMarginRenewalWipCode is null
									then 'W.WIPCODE'
									else dbo.fn_WrapQuotes(@sMarginRenewalWipCode,0,@pbCalledFromCentura)
									end+char(10)+
				"				else "+case when @sMarginWipCode is null
									then 'W.WIPCODE'
									else dbo.fn_WrapQuotes(@sMarginWipCode,0,@pbCalledFromCentura)
									end+char(10)+
				"				end"+char(10)+
				"	AND (	NRL.DEBTORNO	= isnull(CN2.NAMENO,W.ACCTCLIENTNO) OR NRL.DEBTORNO IS NULL )"+char(10)+
				"	AND (	NRL.EMPLOYEENO 	= W.EMPLOYEENO OR NRL.EMPLOYEENO IS NULL )"+char(10)+
				"	AND (	NRL.CASETYPE	= C.CASETYPE	OR NRL.CASETYPE	is NULL )"+char(10)+
				"	AND (	NRL.PROPERTYTYPE = C.PROPERTYTYPE OR NRL.PROPERTYTYPE IS NULL )"+char(10)+
				"	AND (	NRL.CASECATEGORY = C.CASECATEGORY OR NRL.CASECATEGORY IS NULL )"+char(10)+
				"	AND (	NRL.SUBTYPE 	= C.SUBTYPE 	OR NRL.SUBTYPE IS NULL )"+char(10)+
				"	AND (	NRL.TYPEOFMARK	= C.TYPEOFMARK	OR NRL.TYPEOFMARK IS NULL )"+char(10)+
				-- As there could be multiple Narrative rules for a WIP Code with the same best fit score, 
				-- a NarrativeKey and other Narrative columns should only be defaulted if there is only 
				-- a single row with the maximum best fit score.
				"and not exists (Select 1"+char(10)+
						"from NARRATIVERULE NRL2"+char(10)+
						"where  NRL2.WIPCODE = NRL.WIPCODE"+char(10)+ 
						"AND (	NRL2.DEBTORNO 		= NRL.DEBTORNO		OR (NRL2.DEBTORNO 	IS NULL AND NRL.DEBTORNO 	IS NULL) )"+char(10)+
						"AND (	NRL2.EMPLOYEENO 	= NRL.EMPLOYEENO	OR (NRL2.EMPLOYEENO 	IS NULL AND NRL.EMPLOYEENO 	IS NULL) )"+char(10)+
						"AND (	NRL2.CASETYPE		= NRL.CASETYPE		OR (NRL2.CASETYPE 	IS NULL AND NRL.CASETYPE	IS NULL) )"+char(10)+
						"AND (	NRL2.PROPERTYTYPE 	= NRL.PROPERTYTYPE 	OR (NRL2.PROPERTYTYPE 	IS NULL AND NRL.PROPERTYTYPE 	IS NULL) )"+char(10)+
						"AND (	NRL2.CASECATEGORY 	= NRL.CASECATEGORY 	OR (NRL2.CASECATEGORY 	IS NULL AND NRL.CASECATEGORY 	IS NULL) )"+char(10)+
						"AND (	NRL2.SUBTYPE 		= NRL.SUBTYPE 		OR (NRL2.SUBTYPE 	IS NULL AND NRL.SUBTYPE	 	IS NULL) )"+char(10)+
						"AND (	NRL2.TYPEOFMARK		= NRL.TYPEOFMARK	OR (NRL2.TYPEOFMARK	IS NULL AND NRL.TYPEOFMARK	IS NULL) )"+char(10)+
						"AND NRL2.NARRATIVERULENO <> NRL.NARRATIVERULENO)"+char(10)+		
						"))"+char(10)
			End
			Else If (@nMarginNarrativeKey is not null)
			Begin
				set @sSQLString3=@sSQLString3+
				"left join NARRATIVE N on (N.NARRATIVENO = "+CAST(@nMarginNarrativeKey as varchar(10))+")"+char(10)
			End

			-- If translated, a best fit is required to locate the language
			If @bIsNarrativeTranslate = 1
			and (@sMarginRenewalWipCode is not null or
			     @sMarginWipCode is not null or
			     @nMarginNarrativeKey is not null)
			Begin
				set @sSQLString3=@sSQLString3+
				"left join CASENAME CN"+char(10)+
				"	on (CN.CASEID = W.CASEID"+char(10)+
				"	and CN.NAMETYPE = 'D'"+char(10)+
				"	and (CN.EXPIRYDATE is null or CN.EXPIRYDATE>getdate())"+char(10)+
				"	and CN.SEQUENCE = (select min(SEQUENCE) from CASENAME CN"+char(10)+
				"	    where CN.CASEID = W.CASEID"+char(10)+
				"	    and CN.NAMETYPE = 'D'"+char(10)+
				"	    and(CN.EXPIRYDATE is null or CN.EXPIRYDATE>getdate())))"+char(10)+
				"left join NARRATIVETRANSLATE NTR on (NTR.NARRATIVENO = N.NARRATIVENO"+char(10)+
				"				and NTR.LANGUAGE = "+char(10)+
				"	(select convert(int,"+char(10)+
				"	substring("+char(10)+
				"	max ("+char(10)+
				"	CASE WHEN (NL.NAMENO IS NULL)	THEN '0' ELSE '1' END +"+char(10)+
				"	CASE WHEN (NL.PROPERTYTYPE IS NULL) THEN '0' ELSE '1' END +"+char(10)+
				"	CASE WHEN (NL.ACTION IS NULL)	THEN '0' ELSE '1' END +"+char(10)+		
				"	convert(varchar,NL.LANGUAGE)), 4,10))"+char(10)+
				"	FROM NAMELANGUAGE NL"+char(10)+
				"	WHERE (NL.NAMENO = isnull(CN.NAMENO,W.ACCTCLIENTNO) OR NL.NAMENO IS NULL )"+char(10)+
				"	AND (NL.PROPERTYTYPE = C.PROPERTYTYPE OR NL.PROPERTYTYPE IS NULL )"+char(10)+
				"	AND (NL.ACTION = (Select TOP 1 A.ACTION"+char(10)+
				"  	    		from OPENACTION A"+char(10)+
				"	   		where A.CASEID = W.CASEID"+char(10)+
				"	    		order by A.POLICEEVENTS DESC, A.DATEUPDATED DESC)"+char(10)+
				"	    OR NL.ACTION IS NULL )))"+char(10)
			End

			set @sSQLString3=@sSQLString3+
			"where W.TRANSNO="+CAST(@nAcctTransNo as varchar(12))+char(10)+
			"and W.ENTITYNO="+CAST(@pnEntityKey as varchar(12))+char(10)+
			"and W.WIPSEQNO="+CAST(@nBaseWipSeqNo as varchar(12))


			Set @sOutputSQLString = char(10)+"OUTPUT INSERTED.TRANSNO, INSERTED.WIPCODE, INSERTED.WIPSEQNO, INSERTED.DISCOUNTFLAG, INSERTED.MARGINFLAG"+char(10)+
							"INTO #OUTPUTTABLE"+CHAR(10)

			exec (@sSQLString+@sOutputSQLString+@sSQLString2+@sSQLString3)

			Select 	@nErrorCode =@@Error

		End
		
		If  @nErrorCode <> 0
		and @pnDebugFlag > 0
		Begin
			set 	@sTimeStamp=convert(nvarchar,getdate(),126)
			RAISERROR ('%s wp_PostWIP-Printing margin WIP SQL',0,1,@sTimeStamp) with NOWAIT
			print @sSQLString
			print @sSQLString2
			print @sSQLString3
			RAISERROR ('%s wp_PostWIP-Dumping data',0,1,@sTimeStamp ) with NOWAIT
			select	@sTimeStamp+' wp_PostWIP-'+'Selected into margin WORKINPROGRESS:'

			-- Do not change error code while in debug
			Exec (@sSQLString2+@sSQLString3) 
		End

		If  @nErrorCode = 0
		and @pnDebugFlag>1
		Begin
			set 	@sTimeStamp=convert(nvarchar,getdate(),126)
			select	@sTimeStamp+' wp_PostWIP-'+'Contents margin WORKINPROGRESS:'
			select 	* from WORKINPROGRESS W
			where	W.TRANSNO  = @nAcctTransNo
			and	W.ENTITYNO = @pnEntityKey
			and	W.WIPSEQNO = (SELECT MAX(WipSeqNo) from #OUTPUTTABLE)
			order by W.ENTITYNO, W.TRANSNO, W.WIPSEQNO
		End
	
		If @nErrorCode = 0
		Begin
			Select @nMarginWipSeqNo = max(WipSeqNo)
			from #OUTPUTTABLE
		End
	End	
	
	------------------------------------------
	-- D I S C O U N T 
	-- FOR MARGIN (MARGIN AS SEPERATE WIP ITEM)		
	------------------------------------------
	If @nErrorCode = 0 and @bExtractDiscount = 1
	        and Isnull(@pnDiscountForMargin,0) <> 0 
		and @pbSeparateMarginFlag = 1 
	Begin	
                Set @nMultiplier = CASE WHEN ((ISNULL(@pnLocalMargin,0) > 0 and isnull(@pnDiscountForMargin,0) > 0)) 
                                                or ((ISNULL(@pnLocalMargin,0) > 0 and isnull(@pnDiscountForMargin,0) < 0))
                                        then -1
                                   else 1 end
                                   				
		If  @pnDebugFlag>0
		Begin
			set 	@sTimeStamp=convert(nvarchar,getdate(),126)
			RAISERROR ('%s wp_PostWIP-Begin margin discount Work In Progress processing',0,1,@sTimeStamp ) with NOWAIT
		End
		
		set @sSQLString=
			"Insert into WORKINPROGRESS"+char(10)+
			"(ENTITYNO, TRANSNO, WIPSEQNO,"+char(10)+
			"DISCOUNTFLAG, WIPCODE, NARRATIVENO,"+char(10)+
			"SHORTNARRATIVE, LONGNARRATIVE,"+char(10)+
			"TOTALTIME, TOTALUNITS, UNITSPERHOUR,"+char(10)+
			"CHARGEOUTRATE, FOREIGNCURRENCY, FOREIGNVALUE,"+char(10)+
			"EXCHRATE, LOCALVALUE, BALANCE,"+char(10)+
			"FOREIGNBALANCE, COSTCALCULATION1, COSTCALCULATION2,"+char(10)+
			"TRANSDATE, POSTDATE, RATENO, CASEID,"+char(10)+
			"ACCTENTITYNO, ACCTCLIENTNO, EMPLOYEENO,"+char(10)+			
			"ASSOCIATENO, INVOICENUMBER,"+char(10)+
			"EMPPROFITCENTRE, EMPFAMILYNO, EMPOFFICECODE,"+char(10)+
			"STATUS, QUOTATIONNO, PRODUCTCODE,"+char(10)+
			"GENERATEDINADVANCE,"+char(10)+
			"CASEPROFITCENTRE, MARGINFLAG, SPLITPERCENTAGE)"+char(10)
			
		set @sSQLString2="select W.ENTITYNO, W.TRANSNO,"+char(10)+
			"ISNULL(WIP.MAXWIPSEQNO,0) + 1 	as WipSeqNo,"+CHAR(10)+
			"1 as DiscountFlag,"+char(10)+
			"W.WIPCODE, W.NARRATIVENO, W.SHORTNARRATIVE, W.LONGNARRATIVE,"+CHAR(10)+
                        "W.TOTALTIME, W.TOTALUNITS, W.UNITSPERHOUR,"+char(10)+
			"W.CHARGEOUTRATE, W.FOREIGNCURRENCY,"+char(10)+
			CASE WHEN(@pnForeignDiscountForMargin is null)
				THEN 'NULL'
				ELSE CAST(@pnForeignDiscountForMargin * @nMultiplier as varchar(13))
			END +" as ForeignValue,"+char(10)+
			"W.EXCHRATE,"+char(10)+
			CAST(@pnDiscountForMargin  * @nMultiplier as varchar(13))+" as LocalValue,"+char(10)+
			CAST(@pnDiscountForMargin  * @nMultiplier as varchar(13))+" as Balance,"+char(10)+
			CASE WHEN(@pnForeignDiscountForMargin is null)
				THEN 'NULL'
				ELSE CAST(@pnForeignDiscountForMargin * @nMultiplier as varchar(13))
			END +" as ForeignBalance,"+char(10)+
			"W.COSTCALCULATION1, W.COSTCALCULATION2,"+char(10)+
			"W.TRANSDATE, W.POSTDATE, W.RATENO, W.CASEID,"+char(10)+
			"W.ACCTENTITYNO, W.ACCTCLIENTNO, W.EMPLOYEENO,"+char(10)+			
			"W.ASSOCIATENO, W.INVOICENUMBER,"+char(10)+
			"W.EMPPROFITCENTRE, W.EMPFAMILYNO, W.EMPOFFICECODE,"+char(10)+
			"W.STATUS, W.QUOTATIONNO, W.PRODUCTCODE,"+char(10)+
			"W.GENERATEDINADVANCE,"+char(10)+
			"W.CASEPROFITCENTRE, 1 as MarginFlag,"+char(10)+
			"null as SplitPercentage"+char(10)
			
		set @sSQLString3="From	WORKINPROGRESS W"+char(10)+
			"left join (SELECT MAX(WIPSEQNO) MAXWIPSEQNO, ENTITYNO, TRANSNO"+char(10)+
			"	From WORKINPROGRESS"+char(10)+
			"	Where TRANSNO ="+CAST(@nAcctTransNo as nvarchar(12))+char(10)+
			"	and ENTITYNO ="+CAST(@pnEntityKey as nvarchar(12))+char(10)+
			"	Group by ENTITYNO, TRANSNO) as WIP ON (WIP.ENTITYNO = W.ENTITYNO and WIP.TRANSNO = W.TRANSNO) "+char(10)
			
		set @sSQLString3=@sSQLString3+
			"where W.TRANSNO="+CAST(@nAcctTransNo as varchar(12))+char(10)+
			"and W.ENTITYNO="+CAST(@pnEntityKey as varchar(12))+char(10)+
			"and W.WIPSEQNO="+CAST(@nMarginWipSeqNo as varchar(12))
			
		Set @sOutputSQLString = char(10)+"OUTPUT INSERTED.TRANSNO, INSERTED.WIPCODE, INSERTED.WIPSEQNO, INSERTED.DISCOUNTFLAG, INSERTED.MARGINFLAG"+char(10)+
							"INTO #OUTPUTTABLE"+CHAR(10)

		exec (@sSQLString+@sOutputSQLString+@sSQLString2+@sSQLString3)

		Select 	@nErrorCode =@@Error
		
		If  @nErrorCode <> 0
		and @pnDebugFlag > 0
		Begin
			set 	@sTimeStamp=convert(nvarchar,getdate(),126)
			RAISERROR ('%s wp_PostWIP-Printing Margin discount WIP SQL',0,1,@sTimeStamp) with NOWAIT
			print @sSQLString
			print @sSQLString2
			print @sSQLString3
			RAISERROR ('%s wp_PostWIP-Dumping data',0,1,@sTimeStamp ) with NOWAIT
			select	@sTimeStamp+' wp_PostWIP-'+'Selected into Margin discount WORKINPROGRESS:'

			-- Do not change error code while in debug
			Exec (@sSQLString2+@sSQLString3) 
		End

		If  @nErrorCode = 0
		and @pnDebugFlag>1
		Begin
			set 	@sTimeStamp=convert(nvarchar,getdate(),126)
			select	@sTimeStamp+' wp_PostWIP-'+'Contents Margin discount WORKINPROGRESS:'
			select 	* from WORKINPROGRESS W
			where	W.TRANSNO  = @nAcctTransNo
			and	W.ENTITYNO = @pnEntityKey
			and	W.WIPSEQNO = (SELECT MAX(WipSeqNo) from #OUTPUTTABLE)
			order by W.ENTITYNO, W.TRANSNO, W.WIPSEQNO
		End		
	End
	
	

	if (@nErrorCode = 0 and (@pbDraftWIP = 1 or @pbReturnWIPKey = 1))
	Begin
		Set @sSQLString = "Select TransNo, WipCode, WipSeqNo, DiscountFlag, MarginFlag from #OUTPUTTABLE"
		exec @nErrorCode = sp_executesql @sSQLString	
	End
	
	If @nErrorCode = 0 and @pbReturnWIPKey = 1
	Begin
		Set @sSQLString = "Select @pnNewTransKey = TransNo, @pnNewWipSeqKey = WipSeqNo From #OUTPUTTABLE"
		exec @nErrorCode = sp_executesql @sSQLString,
				N'@pnNewTransKey	int output,
				  @pnNewWipSeqKey	int output',
				  @pnNewTransKey	= @pnNewTransKey output,
				  @pnNewWipSeqKey	= @pnNewWipSeqKey output
	End

	-----------------------------------
	-- W O R K H I S T O R Y
	-- Create chargeable Work History
	-----------------------------------
	
	If @nErrorCode = 0
	Begin
		If  @pnDebugFlag>0
		Begin
			set 	@sTimeStamp=convert(nvarchar,getdate(),126)
			RAISERROR ('%s wp_PostWIP-Begin chargeable Work History processing',0,1,@sTimeStamp ) with NOWAIT
		End

		set @sSQLString="
		Insert into WORKHISTORY
		(ENTITYNO, TRANSNO, WIPSEQNO, HISTORYLINENO, 
		TRANSDATE, POSTDATE, TRANSTYPE, POSTPERIOD,
		RATENO, WIPCODE, CASEID, 
		ACCTENTITYNO, ACCTCLIENTNO, EMPLOYEENO, ASSOCIATENO, INVOICENUMBER,  
		TOTALTIME, TOTALUNITS, UNITSPERHOUR, 
		CHARGEOUTRATE, FOREIGNCURRENCY, FOREIGNTRANVALUE, 
		EXCHRATE, LOCALTRANSVALUE, COSTCALCULATION1, 
		COSTCALCULATION2, MARGINNO, REFENTITYNO, REFTRANSNO, 
		EMPPROFITCENTRE, EMPFAMILYNO, EMPOFFICECODE, 
		NARRATIVENO, SHORTNARRATIVE, LONGNARRATIVE, 
		STATUS, QUOTATIONNO, PRODUCTCODE,
		DISCOUNTFLAG, GENERATEDINADVANCE,
		VARIABLEFEEAMT,VARIABLEFEETYPE,VARIABLEFEECURR,
		FEECRITERIANO,FEEUNIQUEID,LOCALCOST,FOREIGNCOST,
		ENTEREDQUANTITY,
		MOVEMENTCLASS, COMMANDID, ITEMIMPACT, CASEPROFITCENTRE, MARGINFLAG, REASONCODE,
		PROTOCOLNO, PROTOCOLDATE, VERIFICATIONNUMBER, SPLITPERCENTAGE )"

		set @sSQLString2="
		select 	W.ENTITYNO,
			W.TRANSNO, 
			W.WIPSEQNO,
			1 	as HistoryLineNo,	-- We know this is the first history
			W.TRANSDATE,
			T.TRANPOSTDATE,
			T.TRANSTYPE,
			T.TRANPOSTPERIOD,
			W.RATENO,
			W.WIPCODE,
			W.CASEID,
			W.ACCTENTITYNO,
			W.ACCTCLIENTNO,
			W.EMPLOYEENO,
			W.ASSOCIATENO,
			W.INVOICENUMBER,
			W.TOTALTIME,
			W.TOTALUNITS,
			W.UNITSPERHOUR,
			W.CHARGEOUTRATE,
			W.FOREIGNCURRENCY,
			CASE WHEN W.FOREIGNCURRENCY IS NOT NULL THEN W.FOREIGNVALUE ELSE NULL END,
			W.EXCHRATE,
			W.LOCALVALUE,
			W.COSTCALCULATION1,
			W.COSTCALCULATION2,
			W.MARGINNO,
			T.ENTITYNO,
			T.TRANSNO,
			W.EMPPROFITCENTRE,
			W.EMPFAMILYNO,
			W.EMPOFFICECODE, 
			W.NARRATIVENO,
			W.SHORTNARRATIVE,
			W.LONGNARRATIVE,
			case when @pbDraftWIP = 1 then 0 else 1 end as Status,
			W.QUOTATIONNO,
			W.PRODUCTCODE,
			W.DISCOUNTFLAG,
			W.GENERATEDINADVANCE,
			W.VARIABLEFEEAMT,
			W.VARIABLEFEETYPE,
			W.VARIABLEFEECURR,
			W.FEECRITERIANO,
			W.FEEUNIQUEID,
			W.LOCALCOST,
			W.FOREIGNCOST,
			ENTEREDQUANTITY,
			"

			if (@bIsCreditWIP = 1 or @pnTransactionType in (516,519))
			Begin
				Set @sSQLString2 = @sSQLString2 + char(10) + "case when T.TRANSTYPE IN (516,519) then 2 else 1 end as MovementClass,
				case when T.TRANSTYPE IN (516,519) then 99 else 1 end as CommandID,"
			End
			Else
			Begin
				Set @sSQLString2 = @sSQLString2 + char(10) + "case when ((W.BALANCE < 0 and ISNULL(W.DISCOUNTFLAG,0) = 0) OR (W.BALANCE > 0 AND W.DISCOUNTFLAG = 1)) and T.TRANSTYPE = 510 then 2 else 1 end as MovementClass,
					case when ((W.BALANCE < 0 and ISNULL(W.DISCOUNTFLAG,0) = 0) OR (W.BALANCE > 0 AND W.DISCOUNTFLAG = 1)) and T.TRANSTYPE = 510 then 2 else 1 end as CommandID,"
			End
			
			Set @sSQLString2 = @sSQLString2 + char(10) + "1 			as ItemImpact,		-- Item Created
			W.CASEPROFITCENTRE,
			W.MARGINFLAG,
			@psReasonCode,
			@psProtocolNo,
			case when @psProtocolDateString is not null 
			then dbo.fn_DateOnly(cast(@psProtocolDateString as datetime))
			else null
			end,
			W.VERIFICATIONNUMBER,
			W.SPLITPERCENTAGE
		from 	TRANSACTIONHEADER T	
		join	WORKINPROGRESS W	on (W.ENTITYNO = T.ENTITYNO
						and W.TRANSNO = T.TRANSNO)
		where	T.TRANSNO  = @nAcctTransNo
		and	T.ENTITYNO = @pnEntityKey
		and	not exists (Select * From WORKHISTORY Where ENTITYNO = W.ENTITYNO
						and TRANSNO = W.TRANSNO
						and WIPSEQNO = W.WIPSEQNO
						and HISTORYLINENO = 1)"

		Set @sSQLString=@sSQLString+@sSQLString2

		Exec @nErrorCode=sp_executesql @sSQLString, 
				N'@pnEntityKey		int,
				  @nAcctTransNo		int,
				  @pbDraftWIP		bit,
				  @psReasonCode		nvarchar(2),
				  @psProtocolNo		nvarchar(20),
				  @psProtocolDateString	nvarchar(15)',
				  @pnEntityKey		= @pnEntityKey,
				  @nAcctTransNo		= @nAcctTransNo,
				  @pbDraftWIP		= @pbDraftWIP,
				  @psReasonCode		= @psReasonCode,
				  @psProtocolNo		= @psProtocolNo,
				  @psProtocolDateString	= @psProtocolDateString

		If  @nErrorCode <> 0
		and @pnDebugFlag > 0
		Begin
			set 	@sTimeStamp=convert(nvarchar,getdate(),126)
			RAISERROR ('%s wp_PostWIP-Dumping data',0,1,@sTimeStamp ) with NOWAIT
			select	@sTimeStamp+' wp_PostWIP-'+'Selected into chargeable WORKHISTORY:'

			-- Do not change error code while in debug
			Exec sp_executesql @sSQLString2, 
				N'@pnEntityKey		int,
				  @nAcctTransNo		int,
				  @pbDraftWIP		bit,
				  @psReasonCode		nvarchar(2),
				  @psProtocolNo		nvarchar(20),
				  @psProtocolDateString	nvarchar(15)',
				  @pnEntityKey		= @pnEntityKey,
				  @nAcctTransNo		= @nAcctTransNo,
				  @pbDraftWIP		= @pbDraftWIP,
				  @psReasonCode		= @psReasonCode,
				  @psProtocolNo		= @psProtocolNo,
				  @psProtocolDateString	= @psProtocolDateString
		End

		If  @nErrorCode = 0
		and @pnDebugFlag>1
		Begin
			set 	@sTimeStamp=convert(nvarchar,getdate(),126)
			select	@sTimeStamp+' wp_PostWIP-'+'Contents of chargeable WORKHISTORY:'
			select 	* from WORKHISTORY W
			where	W.TRANSNO  = @nAcctTransNo
			and	W.ENTITYNO = @pnEntityKey
			and	W.LOCALTRANSVALUE <> 0
			order by W.ENTITYNO, W.TRANSNO, W.WIPSEQNO, W.HISTORYLINENO
		End
	End


		
	-- Create Control Totals
	-- R50927 - control totals for wip transfer will be performed in the caller stored proc wpw_AdjustWIP after the movement in WORKHISTORY data is adjusted.
	If @nErrorCode=0 and @pbDraftWIP = 0 
	and @pnTransactionType not in (1002, 1003, 1004, 1007)
	Begin
		If  @pnDebugFlag>0
		Begin
			set 	@sTimeStamp=convert(nvarchar,getdate(),126)
			RAISERROR ('%s wp_PostWIP-Begin creating Control Totals',0,1,@sTimeStamp ) with NOWAIT
		End

		set @sSQLString="
		insert	CONTROLTOTAL (LEDGER, CATEGORY, TYPE, 
				     PERIODID, ENTITYNO, TOTAL)"

		set @sSQLString2="
		select	distinct 
			1 		as Ledger, 	-- Work In Progress
			W.MOVEMENTCLASS, 
			W.TRANSTYPE, 
			W.POSTPERIOD, 
			W.REFENTITYNO, 
			0		as Total
		from	WORKHISTORY W
		where	W.REFTRANSNO  = @nAcctTransNo
		and	W.REFENTITYNO = @pnEntityKey
		and	W.LOCALTRANSVALUE <> 0
		and	not exists
			(select 1
			from CONTROLTOTAL C
			where C.LEDGER = 1	-- Work In Progress
			and C.CATEGORY = W.MOVEMENTCLASS
			and C.TYPE = W.TRANSTYPE
			and C.PERIODID = W.POSTPERIOD
			and C.ENTITYNO = W.REFENTITYNO)"

		set @sSQLString = @sSQLString+@sSQLString2

		Exec @nErrorCode=sp_executesql @sSQLString, 
				N'@pnEntityKey		int,
				  @nAcctTransNo		int',
				  @pnEntityKey		= @pnEntityKey,
				  @nAcctTransNo		= @nAcctTransNo

		If  @nErrorCode <> 0
		and @pnDebugFlag > 0
		Begin
			set 	@sTimeStamp=convert(nvarchar,getdate(),126)
			RAISERROR ('%s wp_PostWIP-Dumping data',0,1,@sTimeStamp ) with NOWAIT
			select	@sTimeStamp+' wp_PostWIP-'+'Selected into CONTROLTOTAL:'

			-- Do not change error code while in debug
			Exec sp_executesql @sSQLString2, 
				N'@pnEntityKey		int,
				  @nAcctTransNo		int',
				  @pnEntityKey		= @pnEntityKey,
				  @nAcctTransNo		= @nAcctTransNo
		End
	End

	-- Update Control Totals
	-- R50927 - control totals for wip transfer will be performed in the caller stored proc wpw_AdjustWIP after the movement in WORKHISTORY data is adjusted.
	If @nErrorCode=0 and @pbDraftWIP = 0
	and @pnTransactionType not in (1002, 1003, 1004, 1007)
	Begin
		If  @pnDebugFlag>0
		Begin
			set 	@sTimeStamp=convert(nvarchar,getdate(),126)
			RAISERROR ('%s wp_PostWIP-Begin updating Control Totals',0,1,@sTimeStamp ) with NOWAIT
		End

		-- R50927 Bug fix - incorrect controltotal for split wip
		-- note: split wip creates multiple workhistory for a REFTRANSNO.  So we need to filter by the corresponding WIPSEQNO of WORKINPROGRESS.
		set @sSQLString="
		update	CONTROLTOTAL set TOTAL = TOTAL + W.LOCALTRANSVALUE"
		set @sSQLString2="
		from  (select MOVEMENTCLASS, TRANSTYPE, POSTPERIOD, REFENTITYNO,
                       LOCALTRANSVALUE = SUM(LOCALTRANSVALUE)
                         from  WORKHISTORY
                         where REFENTITYNO = @pnEntityKey
                         and   REFTRANSNO  = @nAcctTransNo
                         and   LOCALTRANSVALUE <> 0
                         and   HISTORYLINENO = 1"           

		-- filter by WIPSEQNO for Split WIP transactions only
		if (@pnTransactionType = 1008)          
		Begin
			set @sSQLString2=@sSQLString2+"and   WIPSEQNO = (SELECT MAX(WIPSEQNO) 
				From WORKINPROGRESS
				Where ENTITYNO = @pnEntityKey
				and TRANSNO =@nAcctTransNo)"    
		End

                set @sSQLString2=@sSQLString2+"group by MOVEMENTCLASS, TRANSTYPE, POSTPERIOD, REFENTITYNO) W
                inner join  CONTROLTOTAL on CONTROLTOTAL.LEDGER = 1
                 and   CONTROLTOTAL.CATEGORY = W.MOVEMENTCLASS
                 and   CONTROLTOTAL.TYPE     = W.TRANSTYPE
                 and   CONTROLTOTAL.PERIODID = W.POSTPERIOD
                 and   CONTROLTOTAL.ENTITYNO = W.REFENTITYNO"

		set @sSQLString = @sSQLString+@sSQLString2

		Exec @nErrorCode=sp_executesql @sSQLString, 
				N'@pnEntityKey		int,
				  @nAcctTransNo		int',
				  @pnEntityKey		= @pnEntityKey,
				  @nAcctTransNo		= @nAcctTransNo
	End
		
	------------------------------------------------
	-- On successful posting of WorkInProgress, call
	-- procedure to insert entry into FeeListCase
	-- for payment to IP Office if a FeeType has 
	-- been passed.
	------------------------------------------------
	If  @nErrorCode=0
	and @psFeeType is not null
	and @pbDraftWIP = 0
	Begin
                Declare @nPreMarginLocalValue decimal(11,2)
                Declare @nPreMarginForeignValue decimal(11,2)
		Set @dtWhenRequested = getdate()
                Set @nPreMarginLocalValue = @pnLocalValue - ISNULL(@pnLocalMargin,0)
                Set @nPreMarginForeignValue = @pnForeignValue - ISNULL(@pnForeignMargin,0)

		Exec @nErrorCode=dbo.wp_AddToFeeList
					@pnUserIdentityId	= @pnUserIdentityId,
					@psCulture		= @psCulture,
 					@psFeeType		= @psFeeType,
 					@pnCaseId		= @pnWIPToCaseId,
 					@pnBaseFeeAmount	= @pnBaseFeeAmount,
 					@pnAdditionalFee	= @pnAdditionalFee,
					@pnLocalAmount		= @nPreMarginLocalValue,
 					@pnForeignAmount	= @nPreMarginForeignValue,
 					@psCurrency		= @psForeignCurrency,
 					@pnQuantityInCalc	= @pnEnteredQuantity,
 					@psTaxCode		= @psFeeTaxCode,
 					@pnTaxAmount		= @pnFeeTaxAmount,
 					@pnAgeOfCase		= @pnAgeOfCase,
					@pnEntityKey		= @pnEntityKey,
					@pdtTransDate		= @pdtTransDate,
 					@pdtWhenRequested	= @dtWhenRequested
 	End	

	-- Run GL
	If (@nErrorCode = 0)
	Begin
		Set @sSQLString = "
			Select @nGLJournalCreation = isnull(COLINTEGER,0)
			From SITECONTROL
			Where CONTROLID = 'GL Journal Creation'"

		exec	@nErrorCode = sp_executesql @sSQLString,
					N'@nGLJournalCreation	int 			OUTPUT',
					@nGLJournalCreation = @nGLJournalCreation	OUTPUT
	End

	If (@nErrorCode = 0 and @nGLJournalCreation = 1 and @pbSuppressPostToGL = 0)
	Begin
		If (@pnDebugFlag > 0)
		Begin
			Print 'Process GL Interface'
		End
			
		exec @nErrorCode = dbo.fi_CreateAndPostJournals
		  @pnResult = @nResult OUTPUT,
		  @pnUserIdentityId = @pnUserIdentityId,
		  @psCulture = @psCulture,
		  @pbCalledFromCentura = @pbCalledFromCentura,
		  @pnEntityNo = @pnEntityKey,
		  @pnTransNo = @nAcctTransNo,
		  @pnDesignation = 1,
		  @pbIncProcessedNoJournal = 0
	End

	DROP TABLE #OUTPUTTABLE

	if (@pbDraftWIP = 0 and @pbSuppressCommit = 0)
	Begin
	-- Commit transaction if successful
		If @@TranCount > @nTranCountStart
		Begin
			If @nErrorCode = 0
			Begin
				If  @pnDebugFlag>0
				Begin
					set 	@sTimeStamp=convert(nvarchar,getdate(),126)
					RAISERROR ('%s wp_PostWIP-Committing entries',0,1,@sTimeStamp ) with NOWAIT
				End

				COMMIT TRANSACTION
			End
			Else
			Begin
				If  @pnDebugFlag>0
				Begin
					set 	@sTimeStamp=convert(nvarchar,getdate(),126)
					RAISERROR ('%s wp_PostWIP-Rolling back entries',0,1,@sTimeStamp) with NOWAIT
				End
				ROLLBACK TRANSACTION T2
			End
		End
	End

End

Return @nErrorCode
GO

Grant execute on dbo.wp_PostWIP to public
GO
