	/*@pnPeriod	Varchar(254),
	  @pnEntityName	Varchar(254),
	  @psDebtorName	Varchar(254),
	  @pnCategory	Varchar(254),
	  @pnUserIdentityId int
	*/
	

	set NOCOUNT on
	SET CONCAT_NULL_YIELDS_NULL OFF
	declare @pnPeriodID	int
	declare @bHasRowAccessSecurity bit
	declare @sEntityName nvarchar(255)

	set @bHasRowAccessSecurity = 0
	set @sEntityName = @pnEntityName + '%'

	Select @bHasRowAccessSecurity = 1
		from IDENTITYROWACCESS U WITH (NOLOCK) 
		join ROWACCESSDETAIL R WITH (NOLOCK) on (R.ACCESSNAME = U.ACCESSNAME) 
		where R.RECORDTYPE = 'N'
		and U.IDENTITYID = @pnUserIdentityId

	select @pnPeriodID = PERIODID from PERIOD where LABEL = @pnPERIOD

	
	select
		convert( nvarchar(254), N1.NAME + CASE WHEN N1.FIRSTNAME IS NOT NULL THEN ', ' END + N1.FIRSTNAME) AS DEBTORNAME,
		N1.NAMECODE AS DEBTORCODE,  
		T.DESCRIPTION AS CATEGORY,
		convert( nvarchar(254), CASE WHEN N2.NAMENO is not null then N2.NAME + CASE WHEN N2.FIRSTNAME IS NOT NULL THEN ', ' END + N2.FIRSTNAME +SPACE(1) + CASE WHEN N2.NAMECODE IS NOT NULL THEN '{' END +N2.NAMECODE+ CASE WHEN N2.NAMECODE IS NOT NULL THEN '}' END ELSE NULL END ) AS RESPONSIBLESTAFF,  
		N.NAME	AS	ENTITYNAME,
		O.OPENITEMNO AS OPENITEMNO,
		O.ITEMDATE as ITEMDATE,
		CAST((CASE WHEN (O.ITEMDATE >= P0.STARTDATE)			 THEN DEBTORHISTORY.LOCALBALANCE ELSE 0 END) as MONEY)
		as 'Current - Local',
		CAST((CASE WHEN (O.ITEMDATE between P1.STARTDATE and P1.ENDDATE) THEN DEBTORHISTORY.LOCALBALANCE ELSE 0 END) as MONEY)
		as 'Period1 - Local',
		CAST((CASE WHEN (O.ITEMDATE between P2.STARTDATE and P2.ENDDATE) THEN DEBTORHISTORY.LOCALBALANCE ELSE 0 END) as MONEY)
		as 'Period2 - Local',
		CAST((CASE WHEN (O.ITEMDATE between P3.STARTDATE and P3.ENDDATE) THEN DEBTORHISTORY.LOCALBALANCE ELSE 0 END) as MONEY)
		as 'Period3 - Local',
		CAST((CASE WHEN (O.ITEMDATE between P4.STARTDATE and P4.ENDDATE) THEN DEBTORHISTORY.LOCALBALANCE ELSE 0 END) as MONEY)
		as 'Period4 - Local',
		CAST((CASE WHEN (O.ITEMDATE < P4.STARTDATE )			 THEN DEBTORHISTORY.LOCALBALANCE ELSE 0 END) as MONEY)
		as 'Period5 - Local',
		CAST((DEBTORHISTORY.LOCALBALANCE) as MONEY)
		as 'Total - Local',
		CAST((CREDITORHISTORY.LOCALBALANCE) as MONEY)
		as 'CreditorTotal - Local',
		DEBTORHISTORY.CURRENCY AS DEBTORCURRENCY,
		CAST((CASE WHEN (O.ITEMDATE >= P0.STARTDATE)			 THEN DEBTORHISTORY.FOREIGNBALANCE ELSE 0 END) as MONEY)
		as 'Current - Foreign',
		CAST((CASE WHEN (O.ITEMDATE between P1.STARTDATE and P1.ENDDATE) THEN DEBTORHISTORY.FOREIGNBALANCE ELSE 0 END) as MONEY)
		as 'Period1 - Foreign',
		CAST((CASE WHEN (O.ITEMDATE between P2.STARTDATE and P2.ENDDATE) THEN DEBTORHISTORY.FOREIGNBALANCE ELSE 0 END) as MONEY)
		as 'Period2 - Foreign',
		CAST((CASE WHEN (O.ITEMDATE between P3.STARTDATE and P3.ENDDATE) THEN DEBTORHISTORY.FOREIGNBALANCE ELSE 0 END) as MONEY)
		as 'Period3 - Foreign',
		CAST((CASE WHEN (O.ITEMDATE between P4.STARTDATE and P4.ENDDATE) THEN DEBTORHISTORY.FOREIGNBALANCE ELSE 0 END) as MONEY)
		as 'Period4 - Foreign',
		CAST((CASE WHEN (O.ITEMDATE < P4.STARTDATE )			 THEN DEBTORHISTORY.FOREIGNBALANCE ELSE 0 END) as MONEY)
		as 'Period5 - Foreign',
		CAST((DEBTORHISTORY.FOREIGNBALANCE) as MONEY)
		as 'Total - Foreign',
		CAST((DEBTORHISTORY.FOREIGNBALANCE / C1.SELLRATE) as MONEY)
		as 'Total - Revalued', 
		CAST((CREDITORHISTORY.FOREIGNBALANCE) as MONEY)
		as 'CreditorTotal - Foreign',
		DS.DEBTORSTATUS AS RESTRICTION
		from OPENITEM O
		join (SELECT ACCTENTITYNO, ACCTDEBTORNO, ITEMENTITYNO, ITEMTRANSNO,
			SUM(LOCALVALUE) AS LOCALBALANCE, 
			SUM(FOREIGNTRANVALUE) AS FOREIGNBALANCE,
			CURRENCY
			FROM DEBTORHISTORY
			WHERE STATUS != 0
			and MOVEMENTCLASS != 9
			AND POSTPERIOD <= @pnPeriodID
			GROUP BY ITEMENTITYNO, ITEMTRANSNO, ACCTENTITYNO, ACCTDEBTORNO, CURRENCY) as DEBTORHISTORY
		on (DEBTORHISTORY.ACCTENTITYNO = O.ACCTENTITYNO
		and DEBTORHISTORY.ACCTDEBTORNO = O.ACCTDEBTORNO
		and DEBTORHISTORY.ITEMENTITYNO = O.ITEMENTITYNO
		and DEBTORHISTORY.ITEMTRANSNO = O.ITEMTRANSNO
		and DEBTORHISTORY.LOCALBALANCE != 0)
		left join CURRENCY C1 on (DEBTORHISTORY.CURRENCY = C1.CURRENCY)
		left join (SELECT ACCTENTITYNO, ACCTCREDITORNO, 
			SUM(LOCALVALUE) AS LOCALBALANCE, 
			SUM(FOREIGNTRANVALUE) AS FOREIGNBALANCE
			FROM CREDITORHISTORY
			WHERE STATUS != 0
			AND POSTPERIOD <= @pnPeriodID
			GROUP BY ACCTENTITYNO, ACCTCREDITORNO) as CREDITORHISTORY
		on (CREDITORHISTORY.ACCTENTITYNO = O.ACCTENTITYNO
		and CREDITORHISTORY.ACCTCREDITORNO = O.ACCTDEBTORNO
		and CREDITORHISTORY.LOCALBALANCE != 0)
		join NAME N on (N.NAMENO=O.ACCTENTITYNO and N.NAME LIKE @sEntityName)
		join dbo.fn_NamesEthicalWall(@pnUserIdentityId) N1 ON (O.ACCTDEBTORNO = N1.NAMENO and (N1.NAME LIKE @psDebtorName or N1.NAMECODE like @psDebtorName))
		join IPNAME IP on (IP.NAMENO=N1.NAMENO)		
		left join dbo.fn_NamesRowSecurity(@pnUserIdentityId) RN ON (RN.NAMENO = IP.NAMENO)
		left join TABLECODES T on (IP.CATEGORY = T.TABLECODE and T.TABLETYPE = 6)
		join PERIOD P0 on (P0.PERIODID = @pnPeriodID)
		join PERIOD P1 on (P1.PERIODID = (select max(PERIODID)from PERIOD where ENDDATE < P0.STARTDATE))
		join PERIOD P2 on (P2.PERIODID = (select max(PERIODID)from PERIOD where ENDDATE < P1.STARTDATE))
		join PERIOD P3 on (P3.PERIODID = (select max(PERIODID)from PERIOD where ENDDATE < P2.STARTDATE))
		join PERIOD P4 on (P4.PERIODID = (select max(PERIODID)from PERIOD where ENDDATE < P3.STARTDATE))
		left join ASSOCIATEDNAME AN on (AN.NAMENO = N1.NAMENO
						and AN.RELATIONSHIP = 'RES'
						and AN.RELATEDNAME=(select min(AN1.RELATEDNAME)
									from ASSOCIATEDNAME AN1
									where AN1.NAMENO=AN.NAMENO
									and AN1.RELATIONSHIP=AN.RELATIONSHIP
									and AN1.CEASEDDATE is null))
		left join NAME N2 on (N2.NAMENO = AN.RELATEDNAME)
		left join DEBTORSTATUS DS on (DS.BADDEBTOR = IP.BADDEBTOR)
		where ((IP.CATEGORY is NULL and @pnCategory = '%')
			  or (IP.CATEGORY in (select TB.TABLECODE from TABLECODES TB where TB.DESCRIPTION like @pnCategory and TB.TABLETYPE = 6)))
	    AND ((@bHasRowAccessSecurity = 1 AND (RN.READALLOWED = 1 OR RN.INSERTALLOWED = 1 OR RN.UPDATEALLOWED = 1 OR RN.DELETEALLOWED = 1))
		OR (@bHasRowAccessSecurity = 0))	