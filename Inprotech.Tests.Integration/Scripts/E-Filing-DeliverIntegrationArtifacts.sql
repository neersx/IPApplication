/**********************************************************************************************************/
/*** RFC74789 Update licensing ValidObjects (E-Filing Module)				***/
/**********************************************************************************************************/
If NOT exists (SELECT *
FROM VALIDOBJECT
WHERE TYPE = 40 and OBJECTDATA = '10 242')
        	BEGIN
	PRINT '**** RFC74789 Adding data VALIDOBJECT.OBJECTDATA = ''10 242'''
	declare @validObject int
	Select @validObject = (max(OBJECTID) + 1)
	from VALIDOBJECT

	INSERT INTO VALIDOBJECT
		(OBJECTID, TYPE, OBJECTDATA)
	VALUES
		(@validObject, 40, '10 242')
	PRINT '**** RFC74789 Data successfully added to VALIDOBJECT table.'
	PRINT ''
END
    	ELSE
         	PRINT '**** RFC74789 VALIDOBJECT.OBJECTDATA = ''10 242'' already exists'
PRINT ''
    	go

/**********************************************************************************************************/
/*** RFC74789 Update licensing ValidObjects (Integration E-Filing Module)				***/
/**********************************************************************************************************/
If NOT exists (SELECT *
FROM VALIDOBJECT
WHERE TYPE = 40 and OBJECTDATA = '10 443')
        	BEGIN
	PRINT '**** RFC74789 Adding data VALIDOBJECT.OBJECTDATA = ''10 443'''
	declare @validObject int
	Select @validObject = (max(OBJECTID) + 1)
	from VALIDOBJECT

	INSERT INTO VALIDOBJECT
		(OBJECTID, TYPE, OBJECTDATA)
	VALUES
		(@validObject, 40, '10 443')
	PRINT '**** RFC74789 Data successfully added to VALIDOBJECT table.'
	PRINT ''
END
    	ELSE
         	PRINT '**** RFC74789 VALIDOBJECT.OBJECTDATA = ''10 443'' already exists'
PRINT ''
    	go

/**********************************************************************************************************/
/*** RFC74789 New Subject Security for E-Filing Section - DataTopic					***/
/**********************************************************************************************************/
If NOT exists(SELECT *
FROM DATATOPIC
WHERE TOPICID = 8)
        	BEGIN
	PRINT '**** RFC74789 Adding DATATOPIC.TOPICID = 8'
	INSERT	DATATOPIC
		(TOPICID, TOPICNAME, DESCRIPTION, ISEXTERNAL, ISINTERNAL)
	VALUES
		(8, N'E-filing', N'Information regarding the history and progress of e-filing transactions, including package status and contents', 0, 1)
	PRINT '**** RFC74789 Data successfully added to DATATOPIC table.'
	PRINT ''
END
    	ELSE
        	BEGIN
	PRINT '**** RFC74789 DATATOPIC.TOPICID = 8 already exists'
	PRINT ''
END
    	go


/**********************************************************************************************************/
/*** RFC74789 New Subject Security for E-Filing Section - ValidObject					***/
/**********************************************************************************************************/

If NOT exists (SELECT *
FROM VALIDOBJECT
WHERE TYPE = 30
	and OBJECTDATA = ' 282')
        	BEGIN
	PRINT '**** RFC74789 Adding data VALIDOBJECT.OBJECTDATA =  282'
	declare @validObject int
	Select @validObject = (max(OBJECTID) + 1)
	from VALIDOBJECT
	INSERT INTO VALIDOBJECT
		(OBJECTID, TYPE, OBJECTDATA)
	VALUES
		(@validObject, 30, ' 282')
	PRINT '**** RFC74789 Data successfully added to VALIDOBJECT table.'
	PRINT ''
END
    	ELSE
         	PRINT '**** RFC74789 VALIDOBJECT.OBJECTDATA =  282 already exists'
PRINT ''
    	go

If NOT exists (SELECT *
FROM VALIDOBJECT
WHERE TYPE = 30
	and OBJECTDATA = ' 483')
        	BEGIN
	PRINT '**** RFC74789 Adding data VALIDOBJECT.OBJECTDATA =  483'
	declare @validObject int
	Select @validObject = (max(OBJECTID) + 1)
	from VALIDOBJECT
	INSERT INTO VALIDOBJECT
		(OBJECTID, TYPE, OBJECTDATA)
	VALUES
		(@validObject, 30, ' 483')
	PRINT '**** RFC74789 Data successfully added to VALIDOBJECT table.'
	PRINT ''
END
    	ELSE
         	PRINT '**** RFC74789 VALIDOBJECT.OBJECTDATA =  483 already exists'
PRINT ''
    	go

If NOT exists (SELECT *
FROM VALIDOBJECT
WHERE TYPE = 35
	and OBJECTDATA = '9989')
        	BEGIN
	PRINT '**** RFC74789 Adding data VALIDOBJECT.OBJECTDATA = 9989'
	declare @validObject int
	Select @validObject = (max(OBJECTID) + 1)
	from VALIDOBJECT
	INSERT INTO VALIDOBJECT
		(OBJECTID, TYPE, OBJECTDATA)
	VALUES
		(@validObject, 35, '9989')
	PRINT '**** RFC74789 Data successfully added to VALIDOBJECT table.'
	PRINT ''
END
    	ELSE
         	PRINT '**** RFC74789 VALIDOBJECT.OBJECTDATA = 9989 already exists'
PRINT ''
    	go

------------------------------------------------------------------------------------------------------------------------------
-- Creation of b2b_ListPackageDetails																						--
------------------------------------------------------------------------------------------------------------------------------
If exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[b2b_ListPackageDetails]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
Begin
	Print '**** Drop Stored Procedure dbo.b2b_ListPackageDetails.'
	Drop procedure [dbo].[b2b_ListPackageDetails]
End
Print '**** Creating Stored Procedure dbo.b2b_ListPackageDetails...'
Print ''
GO

SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO


CREATE PROCEDURE dbo.b2b_ListPackageDetails
(
	@psCulture	nvarchar(10) = null,
	@psCaseId	nvarchar(max)
)
as

SET NOCOUNT ON
SET CONCAT_NULL_YIELDS_NULL OFF

select  'e2e-PackageType' as PackageType, 
	'e2e-PackageReference01' as PackageReference, 
	'e2e-Status01' as CurrentStatus, 
	'e2e-StatusDescription001' as CurrentStatusDescription, 
	'e2e-NextEventDue' as NextEventDue, 
	getdate() as LastStatusChange, 
	'e2e-User' as UserName, 
	'e2e-Server' as Server, 
	1 as ExchangeId, 
	1 as PackageSequence
union
select  'e2e-PackageType' as PackageType, 
	'e2e-PackageReference02' as PackageReference, 
	'e2e-Status02' as CurrentStatus, 
	'e2e-StatusDescription002' as CurrentStatusDescription, 
	NULL as NextEventDue, 
	getdate() as LastStatusChange, 
	'e2e-User' as UserName, 
	'e2e-Server' as Server, 
	2 as ExchangeId, 
	1 as PackageSequence


Grant execute on dbo.b2b_ListPackageDetails to public
GO

------------------------------------------------------------------------------------------------------------------------------
-- Creation of b2b_ListPackageFiles																							--
------------------------------------------------------------------------------------------------------------------------------
If exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[b2b_ListPackageFiles]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
Begin
	Print '**** Drop Stored Procedure dbo.b2b_ListPackageFiles.'
	Drop procedure [dbo].[b2b_ListPackageFiles]
End
Print '**** Creating Stored Procedure dbo.b2b_ListPackageFiles...'
Print ''
GO

SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO


CREATE PROCEDURE dbo.b2b_ListPackageFiles
(
	@pnCaseId		int,
	@pnExchangeId	int,
	@pnPackageSeqNo	int
)
as

SET NOCOUNT ON
SET CONCAT_NULL_YIELDS_NULL OFF

select 'e2e1-ComponentDescription' as ComponentDescription, 'e2e1-FileName.jpg' as FileName, 100071 as FileSize, 'jpg' as FileType, 1 as Outbound, 1 as PackageFileSequence
union
select 'e2e2-ComponentDescription' as ComponentDescription, 'e2e2-FileName.jpg' as FileName, 100070 as FileSize, 'jpg' as FileType, 1 as Outbound, 1 as PackageFileSequence
union
select 'e2e3-ComponentDescription' as ComponentDescription, 'e2e3-Response-FileName.jpg' as FileName, 100069 as FileSize, 'jpg' as FileType, 0 as Outbound, 1 as PackageFileSequence

Grant execute on dbo.b2b_ListPackageFiles to public
GO

------------------------------------------------------------------------------------------------------------------------------
-- Creation of b2b_RetrieveFileData																							--
------------------------------------------------------------------------------------------------------------------------------
If exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[b2b_RetrieveFileData]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
Begin
	Print '**** Drop Stored Procedure dbo.b2b_RetrieveFileData.'
	Drop procedure [dbo].[b2b_RetrieveFileData]
End
Print '**** Creating Stored Procedure dbo.b2b_RetrieveFileData...'
Print ''
GO

SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO


CREATE PROCEDURE dbo.b2b_RetrieveFileData
(
	@pnCaseId			int = null,
	@pnPackageSeqNo		int = null,
	@pnPackageFileSeqNo	int = null,
	@pnExchangeId		int = null
)
as

SET NOCOUNT ON
SET CONCAT_NULL_YIELDS_NULL OFF

select 0xas FileData,
'jpg' as FileType, 'DESC.jpg' as FileName

Grant execute on dbo.b2b_RetrieveFileData to public
GO

------------------------------------------------------------------------------------------------------------------------------
-- Creation of b2b_ListPackageHistory																						--
------------------------------------------------------------------------------------------------------------------------------
If exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[b2b_ListPackageHistory]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
Begin
	Print '**** Drop Stored Procedure dbo.b2b_ListPackageHistory.'
	Drop procedure [dbo].[b2b_ListPackageHistory]
End
Print '**** Creating Stored Procedure dbo.b2b_ListPackageHistory...'
Print ''
GO

SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO


CREATE PROCEDURE dbo.b2b_ListPackageHistory
(
	@psCulture		nvarchar(10) = null,
	@pnExchangeId	int
)
as

SET NOCOUNT ON
SET CONCAT_NULL_YIELDS_NULL OFF

Declare @sLookupCulture		nvarchar(10)
Declare @sSqlString			nvarchar(max)

select getdate() as StatusDateTime, 'Task completed successfully.' as Status, 'Task completed successfully (Prepare Package).' as StatusDescription
union
select getdate()+1 as StatusDateTime, 'Pack for DPMA failed.' as Status, 'Pack for DPMA failed. There was an error connecting to the URL: http://localhost/CPAInpro/apps Please ensure the Inprotech Web Application Security Token is correct.' as StatusDescription
order by StatusDateTime desc

Grant execute on dbo.b2b_ListPackageHistory to public
GO