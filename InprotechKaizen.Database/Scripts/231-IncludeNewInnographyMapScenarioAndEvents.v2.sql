if not exists (select * from MAPSCENARIO where STRUCTUREID = 3 and SYSTEMID = -5)
begin
	/* Allow Case Relations to be mapped for Innography */
	insert MAPSCENARIO (STRUCTUREID, SYSTEMID, SCHEMEID, IGNOREUNMAPPED) values (3, -5, -3, 0)
end
go

insert ENCODEDVALUE ( SCHEMEID, STRUCTUREID, CODE, [DESCRIPTION]) 
select E.SCHEMEID, ES.STRUCTUREID, NULL, 'PUBLICATION OF GRANT'
from ENCODINGSCHEME E
join ENCODINGSTRUCTURE ES on ES.SCHEMEID = E.SCHEMEID and ES.NAME = 'CPA Inprotech Events'
where	E.SCHEMECODE = 'CPAINPRO' 
and not exists(
	select * 
	from	ENCODEDVALUE EV 
	where	EV.SCHEMEID = E.SCHEMEID 
	and		EV.STRUCTUREID = ES.STRUCTUREID 
	and		EV.[DESCRIPTION] = 'PUBLICATION OF GRANT'
)
go

update EV
set EV.CODE = isnull(EV.CODE, cast(E.EVENTNO as nvarchar(12)))
from ENCODEDVALUE EV
join ENCODINGSCHEME ES on ES.SCHEMEID = EV.SCHEMEID and ES.SCHEMECODE = 'CPAINPRO'
join ENCODINGSTRUCTURE EST on EST.SCHEMEID = EV.SCHEMEID and EST.NAME = 'CPA Inprotech Events'
left join EVENTS E on E.EVENTNO = -11754 and E.EVENTDESCRIPTION = 'Publication of Grant'
where EV.[DESCRIPTION] = 'PUBLICATION OF GRANT'
go

insert MAPPING (STRUCTUREID, DATASOURCEID, INPUTCODE, INPUTDESCRIPTION, INPUTCODEID, OUTPUTCODEID, OUTPUTVALUE, ISNOTAPPLICABLE)
select EV.STRUCTUREID, NULL, NULL, NULL, EV.CODEID, null, cast(E.EVENTNO as nvarchar(12)), case when E.EVENTNO is null then 1 else 0 end
from ENCODEDVALUE EV
join ENCODINGSTRUCTURE EST on EST.SCHEMEID = EV.SCHEMEID and EST.NAME = 'CPA Inprotech Events'
left join EVENTS E on EVENTNO = -11754 and E.EVENTDESCRIPTION = 'Publication of Grant'
where EV.[DESCRIPTION] = 'PUBLICATION OF GRANT'
and not exists(
	select * 
	from MAPPING M 
	where M.DATASOURCEID is null
	and M.STRUCTUREID = EV.STRUCTUREID 
	and M.INPUTCODEID = EV.CODEID 
)
go	

insert ENCODEDVALUE ( SCHEMEID, STRUCTUREID, CODE, [DESCRIPTION], OUTBOUNDVALUE) 
select E.SCHEMEID, ES.STRUCTUREID, 'PUBLICATION OF GRANT', 'PUBLICATION OF GRANT', 'PUBLICATION OF GRANT'
from ENCODINGSCHEME E
join ENCODINGSTRUCTURE ES on ES.SCHEMEID = E.SCHEMEID and ES.NAME = 'CPA XML Data Exchange Event Code'
where	E.SCHEMECODE = 'CPAXML' 
and not exists(
	select * 
	from	ENCODEDVALUE EV 
	where	EV.SCHEMEID = E.SCHEMEID 
	and		EV.STRUCTUREID = ES.STRUCTUREID 
	and		(EV.[DESCRIPTION] = 'PUBLICATION OF GRANT'
	or		EV.[CODE] = 'PUBLICATION OF GRANT')
)
go

insert MAPPING (STRUCTUREID, DATASOURCEID, INPUTCODE, INPUTDESCRIPTION, INPUTCODEID, OUTPUTCODEID, OUTPUTVALUE, ISNOTAPPLICABLE)
select MS.STRUCTUREID, null, null, null, CPAXML.CODEID, CPAInpro.CODEID, null, 0
from MAPSTRUCTURE as MS
	join (
		select CODEID, EV.[DESCRIPTION]
		from	ENCODEDVALUE EV
		join	ENCODINGSCHEME ES on ES.SCHEMECODE = 'CPAXML'
		join	ENCODINGSTRUCTURE EST on EST.SCHEMEID = ES.SCHEMEID and EST.NAME = 'CPA XML Data Exchange Event Code' 
		where EV.SCHEMEID = ES.SCHEMEID
) as CPAXML on CPAXML.[DESCRIPTION] = 'PUBLICATION OF GRANT'
join (
		select CODEID, EV.[DESCRIPTION]
		from	ENCODEDVALUE EV
		join	ENCODINGSCHEME ES on ES.SCHEMECODE = 'CPAINPRO'
		join	ENCODINGSTRUCTURE EST on EST.SCHEMEID = ES.SCHEMEID and EST.NAME = 'CPA Inprotech Events'
		where EV.SCHEMEID = ES.SCHEMEID
) as CPAInpro on CPAInpro.[DESCRIPTION] = 'PUBLICATION OF GRANT'
where MS.STRUCTURENAME = 'EVENTS'
and not exists (
	select *
	from MAPPING M
	where M.DATASOURCEID is null
	and M.STRUCTUREID = MS.STRUCTUREID
	and INPUTCODEID = CPAXML.CODEID
	and OUTPUTCODEID = CPAInpro.CODEID
)
go


insert ENCODEDVALUE ( SCHEMEID, STRUCTUREID, CODE, [DESCRIPTION], OUTBOUNDVALUE) 
select E.SCHEMEID, 5, 'TERMINATION', 'TERMINATION', 'Termination'
from ENCODINGSCHEME E
where	E.SCHEMECODE = 'CPAXML' 
and not exists(
	select * 
	from	ENCODEDVALUE EV 
	where	EV.SCHEMEID = E.SCHEMEID 
	and		EV.STRUCTUREID = 5
	and		(EV.[DESCRIPTION] = 'TERMINATION'
	or		EV.[CODE] = 'TERMINATION')
)
go

insert MAPPING (STRUCTUREID, DATASOURCEID, INPUTCODE, INPUTDESCRIPTION, INPUTCODEID, OUTPUTCODEID, OUTPUTVALUE, ISNOTAPPLICABLE)
select MS.STRUCTUREID, null, null, null, CPAXML.CODEID, null, null, 0
from MAPSTRUCTURE as MS
	join (
		select CODEID, EV.[DESCRIPTION]
		from	ENCODEDVALUE EV
		join	ENCODINGSCHEME ES on ES.SCHEMECODE = 'CPAXML'
		join	ENCODINGSTRUCTURE EST on EST.SCHEMEID = ES.SCHEMEID and EST.STRUCTUREID = 5 
		where EV.SCHEMEID = ES.SCHEMEID
) as CPAXML on CPAXML.[DESCRIPTION] = 'TERMINATION'
where MS.STRUCTURENAME = 'EVENTS'
and not exists (
	select *
	from MAPPING M
	where M.DATASOURCEID is null
	and M.STRUCTUREID = MS.STRUCTUREID
	and INPUTCODEID = CPAXML.CODEID
)
go