<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="LicenseExpiry_Explanation" xml:space="preserve">
    <value>Note that after the expiry date, you may be BLOCKED from using the specific module.</value>
    <comment>An explanation of what will occur if licenses are not renewed.</comment>
  </data>
  <data name="LicenseExpiry_Extension" xml:space="preserve">
    <value>Please contact Inprotech Support immediately for a licence extension.</value>
    <comment>Instruction for obtaining a extension.</comment>
  </data>
  <data name="LicenseExpiry_ModuleItem" xml:space="preserve">
    <value>{0} will expire on {1}.</value>
    <comment>Message. {0} represents the module name. {1} represents the expiry date of the module’s license.</comment>
  </data>
  <data name="LicenseExpiry_ModuleList" xml:space="preserve">
    <value>The licences for the following modules are about to expire.</value>
    <comment>The introductory sentence of a notification that software licences are approaching expiry.</comment>
  </data>
  <data name="LicenseExpiry_Title" xml:space="preserve">
    <value>Inprotech licence approaching expiry</value>
    <comment>The title of a message notifying the user that the software license is approaching expiry.</comment>
  </data>
  <data name="LicenseExpiry_UnableToNotify" xml:space="preserve">
    <value>None of the user administrators in the system has an email address.  Unable to notify user administrators of errors.</value>
  </data>
  <data name="UserAccountLocked_UnableToNotify" xml:space="preserve">
    <value>None of the user administrators in the system has an email address.  Unable to notify user administrators of locked accounts.</value>
  </data>
  <data name="UserAccountLockedTitle" xml:space="preserve">
    <value>The user account '{0}' has been locked.</value>
    <comment>The title of a message notifying the user that the account has been locked. {0} indicates the account name.</comment>
  </data>
  <data name="UserAccountLockedExplanation" xml:space="preserve">
    <value>The following Inprotech user has exceeded the maximum number of attempts to login to the application:</value>
  </data>
  <data name="UserAccountRequiresTwoFactorEmailTitle" xml:space="preserve">
    <value>Inprotech Verification Code</value>
    <comment>The title of a message notifying the user that the account requires two step verification.</comment>
  </data>
  <data name="UserAccountRequiresTwoFactorExplanation" xml:space="preserve">
    <value>{0} - Use this code for Inprotech verification:</value>
    <comment>The title of a message notifying the user that the account requires two step verification. {0} indicates the verification code.</comment>
  </data>
  <data name="PasswordExpiry_UnableToNotify" xml:space="preserve">
    <value>The user does not has email address.  Unable to notify user for password expiration.</value>
    <comment>The introductory sentence of a notification that password is going to expire.</comment>
  </data>
  <data name="PasswordExpiry_Title" xml:space="preserve">
    <value>Important: Password Expiration</value>
    <comment>The title of a message notifying the user that the password is approaching expiry.</comment>
  </data>
  <data name="UnAuthorisedCases" xml:space="preserve">
    <value>UnAuthorizedCases: </value>
    <comment>The list of unauthorised cases which cann't be updated by Bulk field update.</comment>
  </data>
  <data name="InvalidCasesForGoodsAndServicesWithClass" xml:space="preserve">
    <value>The selected class {0} is not applicable for some of the cases. </value>
    <comment>The list of invalid cases which doesn't have provided class in localclasses .</comment>
  </data>
  <data name="SingleCaseRef" xml:space="preserve">
    <value>case </value>
    <comment>Case .</comment>
  </data>
  <data name="MultipleCaseRef" xml:space="preserve">
    <value>cases </value>
    <comment>Cases .</comment>
  </data>
  <data name="BulkUpdate_Fails" xml:space="preserve">
    <value>Bulk update could not be completed. Contact your system administrator for details.</value>
  </data>
  <data name="SsrsReturnsUnExpectedContentType" xml:space="preserve">
    <value>The reports server returns unexpected content type please verify Reporting service configuration settings.</value>
  </data>
</root>